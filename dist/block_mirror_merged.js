function BlockMirror(t){this.validateConfiguration(t),this.initializeVariables(),this.configuration.skipSkulpt||this.loadSkulpt(),this.textToBlocks=new BlockMirrorTextToBlocks(this),this.textEditor=new BlockMirrorTextEditor(this),this.blockEditor=new BlockMirrorBlockEditor(this),this.setMode(this.configuration.viewMode)}function BlockMirrorTextEditor(t){this.blockMirror=t,this.textContainer=t.tags.textContainer,this.textArea=t.tags.textArea,this.textSidebar=t.tags.textSidebar,this.highlightedHandles=[],this.silentEvents_=!1,this.outOfDate_=null,this.updateTimer_=null;let e={mode:{name:"python",version:3,singleLineStringErrors:!1},readOnly:t.configuration.readOnly,showCursorWhenSelecting:!0,lineNumbers:!0,firstLineNumber:1,indentUnit:4,tabSize:4,indentWithTabs:!1,matchBrackets:!0,extraKeys:{Tab:"indentMore","Shift-Tab":"indentLess","Ctrl-Enter":t.run,Esc:function(t){t.getOption("fullScreen")?t.setOption("fullScreen",!1):t.display.input.blur()},F11:function(t){t.setOption("fullScreen",!t.getOption("fullScreen"))}},foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"]};this.codeMirror=CodeMirror.fromTextArea(this.textArea,e),this.codeMirror.on("change",this.changed.bind(this)),this.codeMirror.setSize(null,"100%"),this.imageMarkers=[],this.textContainer.style.border="1px solid lightgray",this.textContainer.style.float="left",this.updateWidth(),this.textContainer.style.height=t.configuration.height,this.textSidebar.style.height="100%",this.textSidebar.style.float="left",this.textSidebar.style.backgroundColor="#ddd",window.addEventListener("resize",this.resizeResponsively.bind(this),!1),this.codeMirror.on("beforeChange",((t,e)=>{if(this.blockMirror.configuration.imageMode&&"paste"===e.origin){let t=e.text[0];if(this.isImageUrl(t)){let o=this.blockMirror.configuration.imageLiteralHook(t);e.update(null,null,[o])}}})),this.codeMirror.on("change",((t,e)=>{if(this.blockMirror.configuration.imageMode){let o;o="paste"===e.origin||"setValue"===e.origin?e.from.line+e.text.length:Math.max(1+e.to.line,e.text.length),this.updateImages(t,e.from.line,o)}})),this.codeMirror.on("paste",((t,e)=>{if(this.blockMirror.configuration.imageMode){var o=(e.clipboardData||e.originalEvent.clipboardData).items;for(let l=0;l<o.length;l+=1){var r=o[l];if("file"===r.kind){let o=r.getAsFile();this.blockMirror.configuration.imageUploadHook(o,r).then((e=>{let o=t.getDoc();o.replaceRange(e,o.getCursor("from"),o.getCursor("to"))})),e.preventDefault()}}}}))}Blockly.Python.init=function(t){Blockly.Python.PASS=this.INDENT+"pass\n",Blockly.Python.definitions_=Object.create(null),Blockly.Python.functionNames_=Object.create(null),Blockly.Python.imported_=Object.create(null),Blockly.Python.variableDB_?Blockly.Python.variableDB_.reset():Blockly.Python.variableDB_=new Blockly.Names(Blockly.Python.RESERVED_WORDS_),Blockly.Python.variableDB_.setVariableMap(t.getVariableMap())},Blockly.Python.finish=function(t){var e=[],o=[];for(let t in Blockly.Python.definitions_){let r=Blockly.Python.definitions_[t];t in Blockly.Python.imported_||(r.match(/^(from\s+\S+\s+)?import\s+\S+/)?e.push(r):o.push(r))}return delete Blockly.Python.definitions_,delete Blockly.Python.functionNames_,Blockly.Python.variableDB_.reset(),e.length?e.join("\n")+"\n\n"+t:t},Blockly.Python.INDENT="    ",Blockly.Python.RESERVED_WORDS_="False,None,True,and,as,assert,break,class,continue,def,del,elif,else,except,finally,for,from,global,if,import,in,is,lambda,nonlocal,not,or,pass,raise,return,try,while,with,yield",Blockly.Python.scrubNakedValue=function(t){return t},Blockly.Variables.flyoutCategoryBlocks=function(t){var e=t.getVariablesOfType(""),o=[];if(e.length>0){var r=e[e.length-1];if(!Blockly.Variables._HIDE_GETTERS_SETTERS&&Blockly.Blocks.ast_Assign){var l='<xml><block type="ast_Assign" gap="'+(Blockly.Blocks.ast_AugAssign?8:24)+'">'+r+"</block></xml>",n=Blockly.Xml.textToDom(l).firstChild;o.push(n)}if(!Blockly.Variables._HIDE_GETTERS_SETTERS&&Blockly.Blocks.ast_AugAssign&&(l='<xml><block type="ast_AugAssign" gap="'+(Blockly.Blocks.ast_Name?20:8)+'">'+r+'<value name="VALUE"><shadow type="ast_Num"><field name="NUM">1</field></shadow></value><mutation options="false" simple="true"></mutation></block></xml>',n=Blockly.Xml.textToDom(l).firstChild,o.push(n)),Blockly.Blocks.ast_Name){e.sort(Blockly.VariableModel.compareByName);for(let t,r=0;t=e[r];r++)if(Blockly.Variables._HIDE_GETTERS_SETTERS)(n=Blockly.utils.xml.createElement("label")).setAttribute("text",t.name),n.setAttribute("web-class","blockmirror-toolbox-variable"),o.push(n);else{let e=Blockly.utils.xml.createElement("block");e.setAttribute("type","ast_Name"),e.setAttribute("gap",8),e.appendChild(Blockly.Variables.generateVariableFieldDom(t)),o.push(e)}}}return o},Blockly.VariableModel.compareByName=function(t,e){var o=t.name,r=e.name;return o<r?-1:o===r?0:1},Blockly.Names.prototype.getName=function(t,e){if(e==Blockly.VARIABLE_CATEGORY_NAME){var o=this.getNameForUserVariable_(t);o&&(t=o)}var r=t+"_"+e,l=e==Blockly.VARIABLE_CATEGORY_NAME||e==Blockly.Names.DEVELOPER_VARIABLE_TYPE?this.variablePrefix_:"";if(r in this.db_)return l+this.db_[r];var n=this.getDistinctName(t,e);return this.db_[r]=n.substr(l.length),n},Blockly.Names.equals=function(t,e){return t==e},Blockly.Variables.nameUsedWithOtherType_=function(t,e,o){for(var r,l=o.getVariableMap().getAllVariables(),n=0;r=l[n];n++)if(r.name==t&&r.type!=e)return r;return null},Blockly.Variables.nameUsedWithAnyType_=function(t,e){for(var o,r=e.getVariableMap().getAllVariables(),l=0;o=r[l];l++)if(o.name==t)return o;return null},BlockMirror.prototype.validateConfiguration=function(t){if(this.configuration={},!("container"in t))throw new Error('Invalid configuration: Missing "container" property.');this.configuration.container=t.container,this.configuration.blocklyMediaPath="blocklyMediaPath"in t?t.blocklyMediaPath:"../../blockly/media/",this.configuration.run="run"in t?t.run:function(){console.log("Ran!")},this.configuration.readOnly=t.readOnly||!1,this.configuration.height=t.height||500,this.configuration.viewMode=t.viewMode||"split",this.configuration.skipSkulpt=t.skipSkulpt||!1,this.configuration.blockDelay=t.blockDelay||!1,this.configuration.toolbox=t.toolbox||"normal",this.isParsons=function(){return!1},this.configuration.imageUploadHook=t.imageUploadHook||(t=>Promise.resolve(t)),this.configuration.imageDownloadHook=t.imageDownloadHook||(t=>t),this.configuration.imageLiteralHook=t.imageLiteralHook||(t=>t),this.configuration.imageDetection=t.imageDetection||"string",this.configuration.imageMode=t.imageMode||!1},BlockMirror.prototype.initializeVariables=function(){this.tags={toolbar:document.createElement("div"),blockContainer:document.createElement("div"),blockEditor:document.createElement("div"),blockArea:document.createElement("div"),textSidebar:document.createElement("div"),textContainer:document.createElement("div"),textArea:document.createElement("textarea")},this.configuration.container.appendChild(this.tags.toolbar),this.configuration.container.appendChild(this.tags.blockContainer),this.tags.blockContainer.appendChild(this.tags.blockEditor),this.tags.blockContainer.appendChild(this.tags.blockArea),this.configuration.container.appendChild(this.tags.textContainer),this.tags.textContainer.appendChild(this.tags.textSidebar),this.tags.textContainer.appendChild(this.tags.textArea);for(let t in this.tags)this.tags[t].style["box-sizing"]="border-box";this.code_="",this.mode_=null,this.silenceBlock=!1,this.silenceBlockTimer=null,this.silenceText=!1,this.silenceModel=0,this.blocksFailed=!1,this.blocksFailedTimeout=null,this.triggerOnChange=null,this.firstEdit=!0,this.blocklyToolboxWidth=0,this.listeners_=[]},BlockMirror.prototype.loadSkulpt=function(){SkAst.configure({__future__:SkAst.python3,read:function(t){if(void 0===SkAst.builtinFiles||void 0===SkAst.builtinFiles.files[t])throw"File not found: '"+t+"'";return SkAst.builtinFiles.files[t]}})},BlockMirror.prototype.removeAllChangeListeners=function(){this.listeners_.length=0},BlockMirror.prototype.removeChangeListener=function(t){let e=this.listeners_.indexOf(t);-1!==e&&this.listeners_.splice(e,1)},BlockMirror.prototype.addChangeListener=function(t){this.listeners_.push(t)},BlockMirror.prototype.fireChangeListener=function(t){for(let e,o=0;e=this.listeners_[o];o++)e(t)},BlockMirror.prototype.setCode=function(t,e){this.code_=t,e||(this.blockEditor.setCode(t,!0),this.textEditor.setCode(t,!0)),this.fireChangeListener({name:"changed",value:t})},BlockMirror.prototype.getCode=function(){return this.code_},BlockMirror.prototype.getMode=function(){return this.mode_},BlockMirror.prototype.setMode=function(t){this.mode_=t,this.blockEditor.setMode(t),this.textEditor.setMode(t)},BlockMirror.prototype.setImageMode=function(t){this.configuration.imageMode=t,t?this.textEditor.enableImages():this.textEditor.disableImages(),console.log(t)},BlockMirror.prototype.setReadOnly=function(t){this.textEditor.setReadOnly(t),this.blockEditor.setReadOnly(t),$(this.configuration.container).toggleClass("block-mirror-read-only",t)},BlockMirror.prototype.refresh=function(){this.blockEditor.resized(),this.textEditor.codeMirror.refresh()},BlockMirror.prototype.forceBlockRefresh=function(){this.blockEditor.setCode(this.code_,!0)},BlockMirror.prototype.VISIBLE_MODES={block:["block","split"],text:["text","split"]},BlockMirror.prototype.BREAK_WIDTH=675,BlockMirror.prototype.setHighlightedLines=function(t,e){this.textEditor.setHighlightedLines(t,e)},BlockMirror.prototype.clearHighlightedLines=function(){this.textEditor.clearHighlightedLines()},BlockMirrorTextEditor.prototype.enableImages=function(){let t=this.codeMirror.getDoc();this.updateImages(this.codeMirror,t.firstLine(),1+t.lastLine())},BlockMirrorTextEditor.prototype.disableImages=function(){this.imageMarkers.map((t=>t.clear())),this.imageMarkers=this.imageMarkers.filter((t=>t.find()))},BlockMirrorTextEditor.prototype.makeImageWidget=function(t){let e=document.createElement("IMG");e.setAttribute("src",t),e.style.display="none",e.style.maxHeight="100px",e.setAttribute("title",t),e.onclick=t=>{e.hasAttribute("width")?(e.removeAttribute("height"),e.removeAttribute("width")):(e.setAttribute("height","40"),e.setAttribute("width","40"))};let o=document.createElement("span");return o.className="cm-string",o.innerText=JSON.stringify(t),o.onmouseover=t=>{e.style.display="block"},o.onmouseout=t=>{e.style.display="none"},o.appendChild(e),o},BlockMirrorTextEditor.prototype.updateImages=function(t,e,o){t.doc.eachLine(e,o,(e=>{let o;const r=BlockMirrorTextEditor.REGEX_PATTERNS[this.blockMirror.configuration.imageDetection];for(;null!==(o=r.exec(e.text));){this.makeImageWidget(o[3]);let r=o[0].length-o[1].length,l=t.markText({line:t.doc.getLineNumber(e),ch:o.index+r},{line:t.doc.getLineNumber(e),ch:o.index+o[1].length+r},{className:"bm-hyperlinked-image",attributes:{"data-url":o[3]},inclusiveLeft:!1,inclusiveRight:!1});console.log(l),this.imageMarkers.push(l)}}))};const FULL_IMAGE_URL=/^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+(?:png|jpg|jpeg|gif|svg|mp4)+$/,STRING_IMAGE_URL=/((["'])((?:blob:null\/[A-Fa-f0-9-]+)|(?:(?:https?:\/\/)?[\w.-]+(?:\.?[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+(?:png|jpg|jpeg|gif|svg)+)|(?:data:image\/(?:png|jpg|jpeg|gif|svg\+xml|webp|bmp)(?:;charset=utf-8)?;base64,(?:[A-Za-z0-9]|[+/])+={0,2}))\2)/g,CONSTRUCTOR_IMAGE_URL=/(?:^|\W)(Image\((["'])(.+?)\2\))/g;function BlockMirrorBlockEditor(t){this.blockMirror=t,this.blockContainer=t.tags.blockContainer,this.blockEditor=t.tags.blockEditor,this.blockArea=t.tags.blockArea,this.outOfDate_=null,this.loadBlocklyCSS();let e={media:t.configuration.blocklyMediaPath,zoom:{controls:!0},comments:!1,disable:!1,oneBasedIndex:!1,readOnly:t.configuration.readOnly,scrollbars:!0,toolbox:this.makeToolbox()};this.workspace=Blockly.inject(t.tags.blockEditor,e),this.workspace.addChangeListener(this.changed.bind(this)),this.blockContainer.style.float="left",this.blockEditor.style.position="absolute",this.blockEditor.style.width="100%",this.blockArea.style.height=t.configuration.height+"px",this.readOnlyDiv_=null,window.addEventListener("resize",this.resized.bind(this),!1),this.resized()}function BlockMirrorTextToBlocks(t){this.blockMirror=t,this.hiddenImports=["plt"],this.strictAnnotations=["int","float","str","bool"],Blockly.defineBlocksWithJsonArray(BlockMirrorTextToBlocks.BLOCKS)}function arrayMax(t){return t.reduce((function(t,e){return Math.max(t,e)}))}function arrayMin(t){return t.reduce((function(t,e){return Math.min(t,e)}))}function makeTurtleBlock(t,e,o,r,l){BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES.turtle[t]={returns:e,simple:o,message:r,colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},l&&l.forEach((function(e){BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES.turtle[e]=BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES.turtle[t]}))}BlockMirrorTextEditor.REGEX_PATTERNS={constructor:CONSTRUCTOR_IMAGE_URL,string:STRING_IMAGE_URL,none:!1},BlockMirrorTextEditor.prototype.isImageUrl=function(t){return t.match(FULL_IMAGE_URL)},BlockMirrorTextEditor.prototype.defocus=function(){this.codeMirror.display.input.blur()},BlockMirrorTextEditor.prototype.updateWidth=function(){},BlockMirrorTextEditor.prototype.setReadOnly=function(t){this.codeMirror.setOption("readOnly",t)},BlockMirrorTextEditor.prototype.VIEW_CONFIGURATIONS={split:{width:"40%",visible:!0,indentSidebar:!1},text:{width:"100%",visible:!0,indentSidebar:!0},block:{width:"0%",visible:!1,indentSidebar:!1}},BlockMirrorTextEditor.prototype.resizeResponsively=function(){let t=this.blockMirror.mode_,e=this.VIEW_CONFIGURATIONS[t].width,o=this.blockMirror.configuration.height;"split"===t?window.innerWidth>=this.blockMirror.BREAK_WIDTH?(this.textContainer.style.width=e,this.textContainer.style.height=o+"px"):(this.textContainer.style.width="100%",this.textContainer.style.height=o/2+"px"):(this.textContainer.style.width=e,this.textContainer.style.height=o+"px")},BlockMirrorTextEditor.prototype.setMode=function(t){t=t.toLowerCase();let e=this.VIEW_CONFIGURATIONS[t];null!==this.outOfDate_&&this.isVisible()&&this.setCode(this.outOfDate_,!0),this.resizeResponsively(),e.visible?(this.textContainer.style.display="block",this.codeMirror.getWrapperElement().style.display="block",this.codeMirror.refresh()):(this.textContainer.style.height="0%",this.textContainer.style.display="none",this.codeMirror.getWrapperElement().style.display="none"),this.updateGutter(e)},BlockMirrorTextEditor.prototype.updateGutter=function(t){if(void 0===t){let e=this.blockMirror.mode_.toLowerCase();t=this.VIEW_CONFIGURATIONS[e]}let e=window.innerWidth>=this.blockMirror.BREAK_WIDTH;if(t.indentSidebar&&e){let t=this.textContainer.querySelector(".CodeMirror-gutters").offsetWidth,e=this.blockMirror.blockEditor.getToolbarWidth()-t-2;this.textSidebar.style.width=e+"px",this.textSidebar.style.display="block"}else this.textSidebar.style.display="none",this.textSidebar.style.width="0px"},BlockMirrorTextEditor.prototype.setCode=function(t,e){this.silentEvents_=e,t=void 0===t||""===t.trim()?"\n":t,this.isVisible()?(this.codeMirror.setValue(t),this.outOfDate_=null):this.outOfDate_=t},BlockMirrorTextEditor.prototype.getCode=function(){return this.codeMirror.getValue()},BlockMirrorTextEditor.prototype.changed=function(t,e){if(!this.silentEvents_){let t=()=>{let t=this.getCode();this.blockMirror.blockEditor.setCode(t,!0),this.blockMirror.setCode(t,!0)};!1===this.blockMirror.configuration.blockDelay?t():(null!==this.updateTimer_&&clearTimeout(this.updateTimer_),this.updateTimer_=setTimeout(t,this.blockMirror.configuration.blockDelay))}this.silentEvents_=!1},BlockMirrorTextEditor.prototype.isVisible=function(){return-1!==this.blockMirror.VISIBLE_MODES.text.indexOf(this.blockMirror.mode_)},BlockMirrorTextEditor.prototype.setHighlightedLines=function(t,e){let o=t.map((t=>({handle:this.codeMirror.doc.addLineClass(t-1,"background",e),style:e})));this.highlightedHandles=this.highlightedHandles.concat(o)},BlockMirrorTextEditor.prototype.clearHighlightedLines=function(){if(this.highlightedHandles){let t=this.highlightedHandles.map((t=>{this.codeMirror.doc.removeLineClass(t.handle,"background",t.style);var e=this.codeMirror.doc.lineInfo(t.handle);return e?e.line+1:e}));return this.highlightedHandles=[],t}},BlockMirrorBlockEditor.prototype.resizeReadOnlyDiv=function(){if(null!==this.readOnlyDiv_){this.isVisible()||(this.readOnlyDiv_.css("left","0px"),this.readOnlyDiv_.css("top","0px"),this.readOnlyDiv_.css("width","0px"),this.readOnlyDiv_.css("height","0px"));let t=this.blockMirror.tags.blockArea,e=t,o=0,r=0;do{o+=e.offsetLeft,r+=e.offsetTop,e=e.offsetParent}while(e);this.readOnlyDiv_.css("left",o+"px"),this.readOnlyDiv_.css("top",r+"px"),this.readOnlyDiv_.css("width",t.offsetWidth+"px"),this.readOnlyDiv_.css("height",t.offsetHeight+"px")}},BlockMirrorBlockEditor.prototype.setReadOnly=function(t){t?(null===this.readOnlyDiv_&&(this.readOnlyDiv_=$("<div class='blockly-readonly-layer'></div>"),$("body").append(this.readOnlyDiv_)),this.resizeReadOnlyDiv()):null!==this.readOnlyDiv_&&(this.readOnlyDiv_.remove(),this.readOnlyDiv_=null)},BlockMirrorBlockEditor.prototype.updateWidth=function(){this.resized()},BlockMirrorBlockEditor.prototype.resized=function(t){this.resizeResponsively();let e=this.blockMirror.tags.blockArea,o=this.blockMirror.tags.blockEditor;o.style.width=e.offsetWidth+"px",o.style.height=e.offsetHeight+"px",Blockly.svgResize(this.workspace),this.resizeReadOnlyDiv()},BlockMirrorBlockEditor.prototype.toolboxPythonToBlocks=function(t){return Blockly.Variables._HIDE_GETTERS_SETTERS=!1,t.map((t=>{if("string"==typeof t)return t;let e=BlockMirrorTextToBlocks.COLOR[t.colour],o=`<category name="${t.name}" colour="${e}"`;t.custom?o+=` custom="${t.custom}">`:o+=">";let r=(t.blocks||[]).map((t=>this.blockMirror.textToBlocks.convertSource("toolbox.py",t).rawXml.innerHTML.toString())).join("\n");return t.hideGettersSetters&&(Blockly.Variables._HIDE_GETTERS_SETTERS=!0),[o,r,"</category>"].join("\n")})).join("\n")},BlockMirrorBlockEditor.prototype.makeToolbox=function(){let t=this.blockMirror.configuration.toolbox;t in this.TOOLBOXES&&(t=this.TOOLBOXES[t]),"string"!=typeof t&&(t=this.toolboxPythonToBlocks(t));for(let e in BlockMirrorBlockEditor.EXTRA_TOOLS)t+=BlockMirrorBlockEditor.EXTRA_TOOLS[e];return'<xml id="toolbox" style="display:none">'+t+"</xml>"},BlockMirrorBlockEditor.prototype.remakeToolbox=function(){this.workspace.updateToolbox(this.makeToolbox()),this.resized()},BlockMirrorBlockEditor.prototype.getToolbarWidth=function(){return this.blockMirror.configuration.readOnly?0:this.workspace.toolbox_.width},BlockMirrorBlockEditor.prototype.VIEW_CONFIGURATIONS={split:{width:"60%",visible:!0},block:{width:"100%",visible:!0},text:{width:"0%",visible:!1}},BlockMirrorBlockEditor.prototype.resizeResponsively=function(){let t=this.blockMirror.mode_,e=this.VIEW_CONFIGURATIONS[t];"split"===t?window.innerWidth>=this.blockMirror.BREAK_WIDTH?(this.blockContainer.style.width=e.width,this.blockContainer.style.height=this.blockMirror.configuration.height+"px",this.blockArea.style.height=this.blockMirror.configuration.height+"px"):(this.blockContainer.style.width="100%",this.blockContainer.style.height=this.blockMirror.configuration.height/2+"px",this.blockArea.style.height=this.blockMirror.configuration.height/2+"px"):"block"===t&&(this.blockContainer.style.width=e.width,this.blockContainer.style.height=this.blockMirror.configuration.height+"px",this.blockArea.style.height=this.blockMirror.configuration.height+"px")},BlockMirrorBlockEditor.prototype.setMode=function(t){t=t.toLowerCase();let e=this.VIEW_CONFIGURATIONS[t];this.workspace.setVisible(e.visible),e.visible?(this.blockEditor.style.width="100%",this.resized()):(this.blockContainer.style.height="0%",this.blockArea.style.height="0%",this.resizeReadOnlyDiv()),null!==this.outOfDate_&&this.isVisible()&&this.setCode(this.outOfDate_,!0)},BlockMirrorBlockEditor.prototype.getCode=function(){return Blockly.Python.workspaceToCode(this.workspace)},BlockMirrorBlockEditor.prototype.setCode=function(t,e){if(this.isVisible()){let o=this.blockMirror.textToBlocks.convertSource("__main__.py",t);e&&Blockly.Events.disable();try{let t=Blockly.Xml.textToDom(o.xml);this.workspace.clear(),Blockly.Xml.domToWorkspace(t,this.workspace),this.blockMirror.isParsons()?this.workspace.shuffle():this.workspace.cleanUp()}catch(t){console.error(t)}e?Blockly.Events.enable():this.blockMirror.setCode(t,!0),this.outOfDate_=null}else this.outOfDate_=t},BlockMirrorBlockEditor.prototype.BLOCKLY_CHANGE_EVENTS=[Blockly.Events.CREATE,Blockly.Events.DELETE,Blockly.Events.CHANGE,Blockly.Events.MOVE,Blockly.Events.VAR_RENAME],BlockMirrorBlockEditor.prototype.changed=function(t){if((void 0===t||-1!==this.BLOCKLY_CHANGE_EVENTS.indexOf(t.type))&&!this.workspace.isDragging()){let t=this.getCode();this.blockMirror.textEditor.setCode(t,!0),this.blockMirror.setCode(t,!0)}},BlockMirrorBlockEditor.prototype.isVisible=function(){return-1!==this.blockMirror.VISIBLE_MODES.block.indexOf(this.blockMirror.mode_)},BlockMirrorBlockEditor.prototype.DOCTYPE='<?xml version="1.0" standalone="no"?> <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">',BlockMirrorBlockEditor.prototype.BLOCKLY_LOADED_CSS=null,BlockMirrorBlockEditor.prototype.loadBlocklyCSS=function(){if(null===this.BLOCKLY_LOADED_CSS){let t=[".blocklyDraggable {}"];t=t.concat(Blockly.Css.CONTENT),Blockly.FieldDate&&(t=t.concat(Blockly.FieldDate.CSS)),t=t.join("\n"),t=t.replace(/<<<PATH>>>/g,Blockly.Css.mediaPath_),this.BLOCKLY_LOADED_CSS=t}},BlockMirrorBlockEditor.prototype.getPngFromBlocks=function(t){try{this.loadBlocklyCSS();var e=this.workspace.svgBlockCanvas_.cloneNode(!0);if(e.removeAttribute("width"),e.removeAttribute("height"),void 0!==e.childNodes[0]){e.removeAttribute("transform"),e.childNodes[0].removeAttribute("transform"),e.childNodes[0].childNodes[0].removeAttribute("transform");var o=document.createElementNS("http://www.w3.org/1999/xhtml","style");o.textContent=this.BLOCKLY_LOADED_CSS+"\n\n",e.insertBefore(o,e.firstChild);var r=document.getElementsByClassName("blocklyBlockCanvas")[0].getBBox(),l=(new XMLSerializer).serializeToString(e);l='<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="'+r.width+'" height="'+r.height+'" viewBox="0 0 '+r.width+" "+r.height+'"><rect width="100%" height="100%" fill="white"></rect>'+l+"</svg>";var n="data:image/svg+xml;base64,"+btoa(unescape(encodeURIComponent(l))),i=document.createElement("img");i.style.display="block",i.onload=function(){var e=document.createElement("canvas");if(e.width=r.width,e.height=r.height,e.width&&e.height){var o;e.getContext("2d").drawImage(i,0,0);try{o=e.toDataURL("image/png")}catch(t){o=n}i.onload=null,t(o,i)}else t("",i)},i.onerror=function(){t("",i)},i.setAttribute("src",n)}else t("",document.createElement("img"))}catch(e){t("",document.createElement("img")),console.error("PNG image creation not supported!",e)}},BlockMirrorBlockEditor.prototype.highlightLines=function(t,e){},BlockMirrorTextToBlocks.xmlToString=function(t){return(new XMLSerializer).serializeToString(t)},BlockMirrorTextToBlocks.prototype.convertSourceToCodeBlock=function(t){var e=document.createElement("xml");return e.appendChild(BlockMirrorTextToBlocks.raw_block(t)),BlockMirrorTextToBlocks.xmlToString(e)},BlockMirrorTextToBlocks.prototype.convertSource=function(t,e){let o,r,l=document.createElement("xml"),n=null,i=[],s=e;this.source=e.split("\n");let c=1+this.source.length;for(;null===n;){if(""===e.trim())return i.length&&l.appendChild(BlockMirrorTextToBlocks.raw_block(i.join("\n"))),{xml:BlockMirrorTextToBlocks.xmlToString(l),error:null,rawXml:l};try{o=SkAst.parse(t,e),n=SkAst.astFromParse(o.cst,t,o.flags)}catch(t){if(r=t,!(t.traceback&&t.traceback.length&&t.traceback[0].lineno&&t.traceback[0].lineno<c))return l.appendChild(BlockMirrorTextToBlocks.raw_block(s)),{xml:BlockMirrorTextToBlocks.xmlToString(l),error:r,rawXml:l};c=t.traceback[0].lineno-1,i=i.concat(this.source.slice(c)),this.source=this.source.slice(0,c),e=this.source.join("\n")}}this.comments={};for(let t in o.comments){let e=t.split(","),r=parseInt(e[0],10);var a=parseInt(e[1],10);this.comments[r]=a+"|"+o.comments[t]}this.highestLineSeen=0,this.levelIndex=0,this.nextExpectedLine=0,this.measureNode(n);var u=this.convert(n);if(null!==u)for(var h=0;h<u.length;h+=1)l.appendChild(u[h]);return i.length&&l.appendChild(BlockMirrorTextToBlocks.raw_block(i.join("\n"))),{xml:BlockMirrorTextToBlocks.xmlToString(l),error:null,lineMap:this.lineMap,comments:this.comments,rawXml:l}},BlockMirrorTextToBlocks.prototype.recursiveMeasure=function(t,e){if(void 0!==t){var o=e;if("orelse"in t&&t.orelse.length>0&&(o=1===t.orelse.length&&"If"===t.orelse[0]._astname?t.orelse[0].lineno-1:t.orelse[0].lineno-1-1),this.heights.push(e),"body"in t)for(let e=0;e<t.body.length;e++){let r;r=e+1===t.body.length?o:t.body[e+1].lineno-1,this.recursiveMeasure(t.body[e],r)}if("orelse"in t)for(let o=0;o<t.orelse.length;o++){let r;r=o===t.orelse.length?e:t.orelse[o].lineno-1+1,this.recursiveMeasure(t.orelse[o],r)}}},BlockMirrorTextToBlocks.prototype.measureNode=function(t){this.heights=[],this.recursiveMeasure(t,this.source.length-1),this.heights.shift()},BlockMirrorTextToBlocks.prototype.getSourceCode=function(t,e){var o=this.source.slice(t-1,e);if(o.length>0)for(var r=o[0].search(/\S/),l=0;l<o.length;l++)o[l]=o[l].substring(r);return o.join("\n")},BlockMirrorTextToBlocks.prototype.convertBody=function(t,e){this.levelIndex+=1;let o=this.isTopLevel(e);var r=[],l=null,n=null;function i(t){null==l?r.push(t):r.push(l),l=t,n=t}function s(t){if(null==l)l=t,n=t;else if(null==n)l=n;else{var e=document.createElement("next");e.appendChild(t),n.appendChild(e),n=t}}this.levelIndex;for(var c,a,u,h=null,_=!1,k=!1,T=0;T<t.length;T++){c=t[T].lineno,a=0,null!=h&&(a=c-h-1);for(let t in this.comments)if(t<=c){var p=this.comments[t].split("|",2);if(parseInt(p[0],10)/4==this.levelIndex-1){var B=p[1],d=this.ast_Comment(B,t);if(this.highestLineSeen+=1,null==h)s(d);else{let e=Math.abs(h-t)>1;o&&e?i(d):s(d)}h=t,this.highestLineSeen=Math.max(this.highestLineSeen,parseInt(t,10)),a=c-h,delete this.comments[t]}k=!0,_=!0}a=c-this.highestLineSeen,this.highestLineSeen=Math.max(c,this.highestLineSeen);var m=this.heights.shift(),O=this.getSourceCode(c,m),y=this.convertStatement(t[T],O,e);null!=y&&(u=a>1,h=c,o&&y.constructor===Array?i(y[0]):o&&u&&k||o&&!_?i(y):s(y),_=y.constructor!==Array,k=!0)}var E=c+1;if(E in this.comments&&(p=this.comments[E].split("|",2),parseInt(p[0],10)/4==this.levelIndex-1)){var C=p[1];let t=this.ast_Comment(C,E);o&&!_?i(t):s(t),delete this.comments[E],this.highestLineSeen+=1}if(o)for(var g in this.comments)if(p=this.comments[g].split("|",2),parseInt(p[0],10)/4==this.levelIndex-1){var A=p[1];let t=this.ast_Comment(A,g);a=g-h,null==h||a>1?i(t):s(t),h=g,delete this.comments[E]}return null!=l&&r.push(l),this.levelIndex-=1,r},BlockMirrorTextToBlocks.prototype.TOP_LEVEL_NODES=["Module","Expression","Interactive","Suite"],BlockMirrorTextToBlocks.prototype.isTopLevel=function(t){return!t||-1!==this.TOP_LEVEL_NODES.indexOf(t._astname)},BlockMirrorTextToBlocks.prototype.convert=function(t,e){let o="ast_"+t._astname;if(void 0===this[o])throw new Error("Could not find function: "+o);return t._parent=e,this[o](t,e)},BlockMirrorTextToBlocks.prototype.convertStatement=function(t,e,o){try{return this.convert(t,o)}catch(e){let o=this.getChunkHeights(t),r=this.getSourceCode(arrayMin(o),arrayMax(o));return console.error(e),BlockMirrorTextToBlocks.raw_block(r)}},BlockMirrorTextToBlocks.prototype.getChunkHeights=function(t){let e=[];if(t.hasOwnProperty("lineno")&&e.push(t.lineno),t.hasOwnProperty("body"))for(let o=0;o<t.body.length;o+=1){let r=t.body[o];e=e.concat(this.getChunkHeights(r))}if(t.hasOwnProperty("orelse"))for(let o=0;o<t.orelse.length;o+=1){let r=t.orelse[o];e=e.concat(this.getChunkHeights(r))}return e},BlockMirrorTextToBlocks.create_block=function(t,e,o,r,l,n,i){var s=document.createElement("block");s.setAttribute("type",t),s.setAttribute("line_number",e);for(let t in l){let e=l[t];s.setAttribute(t,e)}if(void 0!==n&&Object.keys(n).length>0){let t=document.createElement("mutation");for(let e in n){let o=n[e];if("@"===e.charAt(0))t.setAttribute(e.substr(1),o);else if(null!=o&&o.constructor===Array)for(let r=0;r<o.length;r++){let l=document.createElement(e);l.setAttribute("name",o[r]),t.appendChild(l)}else{let r=document.createElement("arg");"!"===e.charAt(0)?r.setAttribute("name",""):r.setAttribute("name",e),null!==o&&r.appendChild(o),t.appendChild(r)}}s.appendChild(t)}for(let t in o){let e=o[t],r=document.createElement("field");r.setAttribute("name",t),r.appendChild(document.createTextNode(e)),s.appendChild(r)}for(let t in r){let e=r[t],o=document.createElement("value");null!==e&&(o.setAttribute("name",t),o.appendChild(e),s.appendChild(o))}if(void 0!==i&&Object.keys(i).length>0)for(let t in i){let e=i[t];if(null!=e)for(let o=0;o<e.length;o+=1){let r=document.createElement("statement");r.setAttribute("name",t),r.appendChild(e[o]),s.appendChild(r)}}return s},BlockMirrorTextToBlocks.raw_block=function(t){return BlockMirrorTextToBlocks.create_block("ast_Raw",0,{TEXT:t})},BlockMirrorTextToBlocks.BLOCKS=[],BlockMirrorTextToBlocks.prototype.ast_Module=function(t){return this.convertBody(t.body,t)},BlockMirrorTextToBlocks.prototype.ast_Interactive=function(t){return this.convertBody(t.body,t)},BlockMirrorTextToBlocks.prototype.ast_Expression=BlockMirrorTextToBlocks.prototype.ast_Interactive,BlockMirrorTextToBlocks.prototype.ast_Suite=BlockMirrorTextToBlocks.prototype.ast_Module,BlockMirrorTextToBlocks.prototype.ast_Pass=function(){return null},BlockMirrorTextToBlocks.prototype.convertElements=function(t,e,o){for(var r={},l=0;l<e.length;l++)r[t+l]=this.convert(e[l],o);return r},Blockly.Python.blank="___",BlockMirrorTextToBlocks.prototype.LOCKED_BLOCK={inline:"true",deletable:"false",movable:"false"},BlockMirrorTextToBlocks.COLOR={VARIABLES:225,FUNCTIONS:210,OO:240,CONTROL:270,MATH:190,TEXT:120,FILE:170,PLOTTING:140,LOGIC:345,PYTHON:60,EXCEPTIONS:300,SEQUENCES:15,LIST:30,DICTIONARY:0,SET:10,TUPLE:20},BlockMirrorTextToBlocks.ast_Image=function(t,e,o){if(!o.blockMirror.configuration.imageMode)throw"Not using image constructor";if(1!==t.args.length)throw"More than one argument to Image constructor";if("Str"!==t.args[0]._astname)throw"First argument for Image constructor must be string literal";return BlockMirrorTextToBlocks.create_block("ast_Image",t.lineno,{},{},{},{"@src":SkAst.ffi.remapToJs(t.args[0].s)})},BlockMirrorTextToBlocks.prototype.FUNCTION_SIGNATURES={abs:{returns:!0,full:["x"],colour:BlockMirrorTextToBlocks.COLOR.MATH},all:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC},any:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC},ascii:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},bin:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},bool:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC,simple:["x"]},breakpoint:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},bytearray:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},bytes:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},callable:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC},chr:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},classmethod:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},compile:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},complex:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},delattr:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.VARIABLES},dict:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},dir:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},divmod:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},enumerate:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},eval:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},exec:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},filter:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},float:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH,simple:["x"]},format:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},frozenset:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},getattr:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},globals:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.VARIABLES},hasattr:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},hash:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},help:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},hex:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},id:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},Image:{custom:BlockMirrorTextToBlocks.ast_Image},input:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.FILE,simple:["prompt"]},int:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH,simple:["x"]},isinstance:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC},issubclass:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC},iter:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},len:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},list:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LIST},locals:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.VARIABLES},map:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},max:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},memoryview:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},min:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},next:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},object:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},oct:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},open:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.FILE},ord:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},pow:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},print:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.FILE,simple:["message"],full:["*messages","sep","end","file","flush"]},property:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},range:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES,simple:["stop"],full:["start","stop","step"]},repr:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},reversed:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},round:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH,full:["x","ndigits"],simple:["x"]},set:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},setattr:{returns:!1,full:["object","name","value"],colour:BlockMirrorTextToBlocks.COLOR.OO},slice:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},sorted:{full:["iterable","*","**key","**reverse"],simple:["iterable"],returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},staticmethod:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},str:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT,simple:["x"]},sum:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},super:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},tuple:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TUPLE},type:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},vars:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.VARIABLES},zip:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},__import__:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.PYTHON}},BlockMirrorTextToBlocks.prototype.METHOD_SIGNATURES={conjugate:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},trunc:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},floor:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},ceil:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},bit_length:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},to_bytes:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},from_bytes:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},as_integer_ratio:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},is_integer:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},hex:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},fromhex:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},__iter__:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},__next__:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},index:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LIST},count:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LIST},append:{returns:!1,full:["x"],message:"append",premessage:"to list",colour:BlockMirrorTextToBlocks.COLOR.LIST},clear:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},copy:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LIST},extend:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.LIST},insert:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.LIST},pop:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},remove:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},reverse:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.LIST},sort:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.LIST},capitalize:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},casefold:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},center:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},encode:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},endswith:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},expandtabs:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},find:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},format:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},format_map:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isalnum:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isalpha:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isascii:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isdecimal:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isdigit:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isidentifier:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},islower:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isnumeric:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isprintable:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isspace:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},istitle:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isupper:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},join:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},ljust:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},lower:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},lstrip:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},maketrans:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},partition:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},replace:{returns:!0,full:["old","new","count"],simple:["old","new"],colour:BlockMirrorTextToBlocks.COLOR.TEXT},rfind:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},rindex:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},rjust:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},rpartition:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},rsplit:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},rstrip:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},split:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},splitlines:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},startswith:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},strip:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},swapcase:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},title:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},translate:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},upper:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},zfill:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},decode:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},__eq__:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC},tobytes:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},tolist:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},release:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},cast:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},isdisjoint:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},issubset:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},issuperset:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},union:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},intersection:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},difference:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},symmetric_difference:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},update:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SET},intersection_update:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SET},difference_update:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SET},symmetric_difference_update:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SET},add:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SET},discard:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SET},fromkeys:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},get:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},items:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},keys:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},popitem:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},setdefault:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},values:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},__enter__:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.CONTROL},__exit__:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.CONTROL},mro:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},__subclasses__:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO}},BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_IMPORTS={plt:"import matplotlib.pyplot as plt",turtle:"import turtle"},BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES={cisc108:{assert_equal:{returns:!1,simple:["left","right"],message:"assert_equal",colour:BlockMirrorTextToBlocks.COLOR.PYTHON}},turtle:{},plt:{show:{returns:!1,simple:[],message:"show plot canvas",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},hist:{returns:!1,simple:["values"],message:"plot histogram",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},bar:{returns:!1,simple:["xs","heights","*tick_label"],message:"plot bar chart",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},plot:{returns:!1,simple:["values"],message:"plot line",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},boxplot:{returns:!1,simple:["values"],message:"plot boxplot",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},hlines:{returns:!1,simple:["y","xmin","xmax"],message:"plot horizontal line",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},vlines:{returns:!1,simple:["x","ymin","ymax"],message:"plot vertical line",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},scatter:{returns:!1,simple:["xs","ys"],message:"plot scatter",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},title:{returns:!1,simple:["label"],message:"make plot's title",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},xlabel:{returns:!1,simple:["label"],message:"make plot's x-axis label",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},ylabel:{returns:!1,simple:["label"],message:"make plot's y-axis label",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},xticks:{returns:!1,simple:["xs","labels","*rotation"],message:"make x ticks",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},yticks:{returns:!1,simple:["ys","labels","*rotation"],message:"make y ticks",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING}}},BlockMirrorTextToBlocks.prototype.FUNCTION_SIGNATURES.assert_equal=BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES.cisc108.assert_equal,makeTurtleBlock("forward",!1,["amount"],"move turtle forward by",["fd"]),makeTurtleBlock("backward",!1,["amount"],"move turtle backward by",["bd"]),makeTurtleBlock("right",!1,["angle"],"turn turtle right by",["rt"]),makeTurtleBlock("left",!1,["angle"],"turn turtle left by",["lt"]),makeTurtleBlock("goto",!1,["x","y"],"move turtle to position",["setpos","setposition"]),makeTurtleBlock("setx",!1,["x"],"set turtle's x position to ",[]),makeTurtleBlock("sety",!1,["y"],"set turtle's y position to ",[]),makeTurtleBlock("setheading",!1,["angle"],"set turtle's heading to ",["seth"]),makeTurtleBlock("home",!1,[],"move turtle to origin ",[]),makeTurtleBlock("circle",!1,["radius"],"move the turtle in a circle ",[]),makeTurtleBlock("dot",!1,["size","color"],"turtle draws a dot ",[]),makeTurtleBlock("stamp",!0,[],"stamp a copy of the turtle shape ",[]),makeTurtleBlock("clearstamp",!1,["stampid"],"delete stamp with id ",[]),makeTurtleBlock("clearstamps",!1,[],"delete all stamps ",[]),makeTurtleBlock("undo",!1,[],"undo last turtle action ",[]),makeTurtleBlock("speed",!0,["x"],"set or get turtle speed",[]),makeTurtleBlock("position",!0,[],"get turtle's position ",["pos"]),makeTurtleBlock("towards",!0,["x","y"],"get the angle from the turtle to the point ",[]),makeTurtleBlock("xcor",!0,[],"get turtle's x position ",[]),makeTurtleBlock("ycor",!0,[],"get turtle's y position ",[]),makeTurtleBlock("heading",!0,[],"get turtle's heading ",[]),makeTurtleBlock("distance",!0,["x","y"],"get the distance from turtle's position to ",[]),makeTurtleBlock("degrees",!1,[],"set turtle mode to degrees",[]),makeTurtleBlock("radians",!1,[],"set turtle mode to radians",[]),makeTurtleBlock("pendown",!1,[],"pull turtle pen down ",["pd","down"]),makeTurtleBlock("penup",!1,[],"pull turtle pen up ",["pu","up"]),makeTurtleBlock("pensize",!1,[],"set or get the pen size ",["width"]),makeTurtleBlock("pencolor",!1,[],"set or get the pen color ",[]),makeTurtleBlock("fillcolor",!1,[],"set or get the fill color ",[]),makeTurtleBlock("reset",!1,[],"reset drawing",[]),makeTurtleBlock("clear",!1,[],"clear drawing",[]),makeTurtleBlock("write",!1,["message"],"write text ",[]),makeTurtleBlock("bgpic",!1,["url"],"set background to ",[]),makeTurtleBlock("done",!1,[],"start the turtle loop ",["mainloop"]),makeTurtleBlock("setup",!1,["width","height"],"set drawing area size ",[]),makeTurtleBlock("title",!1,["message"],"set title of drawing area ",[]),makeTurtleBlock("bye",!1,[],"say goodbye to turtles ",[]),BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES["matplotlib.pyplot"]=BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES.plt,BlockMirrorTextToBlocks.getFunctionBlock=function(t,e,o){let r;void 0===e&&(e={});let l=!1;void 0!==o?r=BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES[o][t]:t.startsWith(".")?(r=BlockMirrorTextToBlocks.prototype.METHOD_SIGNATURES[t.substr(1)],l=!0):r=BlockMirrorTextToBlocks.prototype.FUNCTION_SIGNATURES[t];let n=void 0!==r.simple?r.simple:void 0!==r.full?r.full:[],i={"@arguments":n.length,"@returns":r.returns||!1,"@parameters":!0,"@method":l,"@name":o?o+"."+t:t,"@message":r.message?r.message:t,"@premessage":r.premessage?r.premessage:"","@colour":r.colour?r.colour:0,"@module":o||""};for(let t=0;t<n.length;t+=1)i["UNKNOWN_ARG:"+t]=null;let s=BlockMirrorTextToBlocks.create_block("ast_Call",null,{},e,{inline:!0},i);return BlockMirrorTextToBlocks.xmlToString(s)};let ZERO_BLOCK=BlockMirrorTextToBlocks.create_block("ast_Num",null,{NUM:0});BlockMirrorBlockEditor.EXTRA_TOOLS={};const TOOLBOX_CATEGORY={VARIABLES:{name:"Variables",colour:"VARIABLES",custom:"VARIABLE"},DECISIONS:{name:"Decisions",colour:"LOGIC",blocks:["if ___: pass","if ___: pass\nelse: pass","___ < ___","___ and ___","not ___"]},CALCULATIONS:{name:"Calculation",colour:"MATH",blocks:["___ + ___","round(___)"]},OUTPUT_WITH_PLOTTING:{name:"Output",colour:"PLOTTING",blocks:["print(___)","plt.plot(___)","plt.scatter(___, ___)","plt.hist(___)","plt.bar(___, ___, tick_label=___)","plt.boxplot(___)","plt.show()","plt.title(___)","plt.xlabel(___)","plt.ylabel(___)","plt.hlines(___, ___, ___)","plt.vlines(___, ___, ___)"]},TURTLES:{name:"Turtles",colour:"PLOTTING",blocks:["turtle.mainloop()","turtle.forward(50)","turtle.backward(50)","turtle.right(90)","turtle.left(90)","turtle.goto(0, 0)","turtle.setx(100)","turtle.sety(100)","turtle.setheading(270)","turtle.pendown()","turtle.penup()","turtle.pencolor('blue')"]},INPUT:{name:"Input",colour:"TEXT",blocks:["input('')"]},VALUES:{name:"Values",colour:"TEXT",blocks:['""',"0","True"]},SEP:"<sep></sep>",CONVERSIONS:{name:"Conversion",colour:"TEXT",blocks:["int(___)","float(___)","str(___)","bool(___)"]},DICTIONARIES:{name:"Dictionaries",colour:"DICTIONARY",blocks:["{'1st key': ___, '2nd key': ___, '3rd key': ___}","{}","___['key']"]}};BlockMirrorBlockEditor.prototype.TOOLBOXES={empty:[{name:"Empty Toolbox",colour:"PYTHON",blocks:[]}],minimal:[TOOLBOX_CATEGORY.VARIABLES],normal:[TOOLBOX_CATEGORY.VARIABLES,TOOLBOX_CATEGORY.DECISIONS,{name:"Iteration",colour:"CONTROL",blocks:["for ___ in ___: pass","while ___: pass","break"]},{name:"Functions",colour:"FUNCTIONS",blocks:["def ___(___): pass","def ___(___: int)->str: pass","return ___"]},TOOLBOX_CATEGORY.SEP,TOOLBOX_CATEGORY.CALCULATIONS,TOOLBOX_CATEGORY.OUTPUT_WITH_PLOTTING,TOOLBOX_CATEGORY.INPUT,TOOLBOX_CATEGORY.TURTLES,TOOLBOX_CATEGORY.SEP,TOOLBOX_CATEGORY.VALUES,TOOLBOX_CATEGORY.CONVERSIONS,{name:"Lists",colour:"LIST",blocks:["[0, 0, 0]","[___, ___, ___]","[]","___.append(___)","range(0, 10)"]},TOOLBOX_CATEGORY.DICTIONARIES],ct:[TOOLBOX_CATEGORY.VARIABLES,TOOLBOX_CATEGORY.DECISIONS,{name:"Iteration",colour:"CONTROL",blocks:["for ___ in ___: pass"]},TOOLBOX_CATEGORY.SEP,TOOLBOX_CATEGORY.CALCULATIONS,TOOLBOX_CATEGORY.OUTPUT_WITH_PLOTTING,TOOLBOX_CATEGORY.INPUT,TOOLBOX_CATEGORY.SEP,TOOLBOX_CATEGORY.VALUES,TOOLBOX_CATEGORY.CONVERSIONS,{name:"Lists",colour:"LIST",blocks:["[0, 0, 0]","[___, ___, ___]","[]","___.append(___)"]}],full:[TOOLBOX_CATEGORY.VARIABLES,{name:"Literal Values",colour:"LIST",blocks:["0","''","True","None","[___, ___, ___]","(___, ___, ___)","{___, ___, ___}","{___: ___, ___: ___, ___: ___}"]},{name:"Calculations",colour:"MATH",blocks:["-___","___ + ___","___ >> ___","abs(___)","round(___)"]},{name:"Logic",colour:"LOGIC",blocks:["___ if ___ else ___","___ == ___","___ < ___","___ in ___","___ and ___","not ___"]},TOOLBOX_CATEGORY.SEP,{name:"Classes",colour:"OO",blocks:["class ___: pass","class ___(___): pass","___.___","___: ___","super()"]},{name:"Functions",colour:"FUNCTIONS",blocks:["def ___(___): pass","def ___(___: int)->str: pass","return ___","yield ___","lambda ___: ___"]},{name:"Imports",colour:"PYTHON",blocks:["import ___","from ___ import ___","import ___ as ___","from ___ import ___ as ___"]},TOOLBOX_CATEGORY.SEP,{name:"Control Flow",colour:"CONTROL",blocks:["if ___: pass","if ___: pass\nelse: pass","for ___ in ___: pass","while ___: pass","break","continue","try: pass\nexcept ___ as ___: pass","raise ___","assert ___","with ___ as ___: pass"]},TOOLBOX_CATEGORY.SEP,TOOLBOX_CATEGORY.OUTPUT_WITH_PLOTTING,TOOLBOX_CATEGORY.INPUT,{name:"Files",colour:"FILE",blocks:["with open('', 'r') as ___: pass","___.read()","___.readlines()","___.write(___)","___.writelines(___)"]},TOOLBOX_CATEGORY.SEP,{name:"Conversion",colour:"TEXT",blocks:["int(___)","float(___)","str(___)","chr(___)","bool(___)","list(___)","dict(___)","tuple(___)","set(___)","type(___)","isinstance(___)"]},{name:"Builtin Functions",colour:"SEQUENCES",blocks:["len(___)","sorted(___)","enumerate(___)","reversed(___)","range(0, 10)","min(___, ___)","max(___, ___)","sum(___)","all(___)","any(___)","zip(___, ___)","map(___, ___)","filter(___, ___)"]},{name:"List Methods",colour:"LIST",blocks:["___.append(___)","___.pop()","___.clear()"]},{name:"String Methods",colour:"TEXT",blocks:["___.startswith('')","___.endswith('')","___.replace('', '')","___.lower('')","___.upper('')","___.title('')","___.strip('')","___.split('')","''.join(___)","___.format('')","___.strip('')"]},{name:"Subscripting",colour:"SEQUENCES",blocks:["___[___]","___[___:___]","___[___:___:___]"]},{name:"Generators",colour:"SEQUENCES",blocks:["[___ for ___ in ___]","(___ for ___ in ___)","{___ for ___ in ___}","{___: ___ for ___ in ___ if ___}","[___ for ___ in ___ if ___]","(___ for ___ in ___ if ___)","{___ for ___ in ___ if ___}","{___: ___ for ___ in ___ if ___}"]},{name:"Comments",colour:"PYTHON",blocks:["# ",'"""\n"""']}],ct2:[{name:"Memory",colour:"VARIABLES",custom:"VARIABLE",hideGettersSetters:!0},TOOLBOX_CATEGORY.SEP,'<category name="Expressions" expanded="true">',{name:"Constants",colour:"TEXT",blocks:['""',"0","True","[0, 0, 0]","[___, ___, ___]","[]"]},{name:"Variables",colour:"VARIABLES",blocks:["VARIABLE"]},TOOLBOX_CATEGORY.CALCULATIONS,TOOLBOX_CATEGORY.CONVERSIONS,{name:"Conditions",colour:"LOGIC",blocks:["___ == ___","___ and ___","not ___"]},TOOLBOX_CATEGORY.INPUT,"</category>",TOOLBOX_CATEGORY.SEP,'<category name="Operations" expanded="true">',{name:"Assignment",colour:"VARIABLES",blocks:["VARIABLE = ___","___.append(___)"]},TOOLBOX_CATEGORY.OUTPUT_WITH_PLOTTING,"</category>",TOOLBOX_CATEGORY.SEP,'<category name="Control" expanded="true">',{name:"Decision",colour:"CONTROL",blocks:["if ___: pass","if ___: pass\nelse: pass"]},{name:"Iteration",colour:"CONTROL",blocks:["for ___ in ___: pass"]},"</category>"]},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_For",message0:"for each item %1 in list %2 : %3 %4",args0:[{type:"input_value",name:"TARGET"},{type:"input_value",name:"ITER"},{type:"input_dummy"},{type:"input_statement",name:"BODY"}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.CONTROL}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_ForElse",message0:"for each item %1 in list %2 : %3 %4 else: %5 %6",args0:[{type:"input_value",name:"TARGET"},{type:"input_value",name:"ITER"},{type:"input_dummy"},{type:"input_statement",name:"BODY"},{type:"input_dummy"},{type:"input_statement",name:"ELSE"}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.CONTROL}),Blockly.Python.ast_For=function(t){var e=Blockly.Python.valueToCode(t,"TARGET",Blockly.Python.ORDER_RELATIONAL)||Blockly.Python.blank,o=Blockly.Python.valueToCode(t,"ITER",Blockly.Python.ORDER_RELATIONAL)||Blockly.Python.blank,r=Blockly.Python.statementToCode(t,"BODY")||Blockly.Python.PASS,l=Blockly.Python.statementToCode(t,"ELSE"),n="for "+e+" in "+o+":\n"+r;return l&&(n+="else:\n"+l),n},BlockMirrorTextToBlocks.prototype.ast_For=function(t,e){var o=t.target,r=t.iter,l=t.body,n=t.orelse,i="ast_For",s={BODY:this.convertBody(l,t)};return n.length>0&&(i="ast_ForElse",s.ELSE=this.convertBody(n,t)),BlockMirrorTextToBlocks.create_block(i,t.lineno,{},{ITER:this.convert(r,t),TARGET:this.convert(o,t)},{},{},s)},Blockly.Python.ast_ForElse=Blockly.Python.ast_For,BlockMirrorTextToBlocks.prototype.ast_ForElse=BlockMirrorTextToBlocks.prototype.ast_For,Blockly.Blocks.ast_If={init:function(){this.orelse_=0,this.elifs_=0,this.appendValueInput("TEST").appendField("if"),this.appendStatementInput("BODY").setCheck(null).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.LOGIC),this.updateShape_()},updateShape_:function(){for(var t=0;t<this.elifs_;t++)this.getInput("ELIF"+t)||(this.appendValueInput("ELIFTEST"+t).appendField("elif"),this.appendStatementInput("ELIFBODY"+t).setCheck(null));for(;this.getInput("ELIFTEST"+t);)this.removeInput("ELIFTEST"+t),this.removeInput("ELIFBODY"+t),t++;for(this.orelse_&&!this.getInput("ELSE")?(this.appendDummyInput("ORELSETEST").appendField("else:"),this.appendStatementInput("ORELSEBODY").setCheck(null)):!this.orelse_&&this.getInput("ELSE")&&(block.removeInput("ORELSETEST"),block.removeInput("ORELSEBODY")),t=0;t<this.elifs_;t++)this.orelse_?(this.moveInputBefore("ELIFTEST"+t,"ORELSETEST"),this.moveInputBefore("ELIFBODY"+t,"ORELSETEST")):t+1<this.elifs_&&(this.moveInputBefore("ELIFTEST"+t,"ELIFTEST"+(t+1)),this.moveInputBefore("ELIFBODY"+t,"ELIFBODY"+(t+1)))},mutationToDom:function(){let t=document.createElement("mutation");return t.setAttribute("orelse",this.orelse_),t.setAttribute("elifs",this.elifs_),t},domToMutation:function(t){this.orelse_="true"===t.getAttribute("orelse"),this.elifs_=parseInt(t.getAttribute("elifs"),10)||0,this.updateShape_()}},Blockly.Python.ast_If=function(t){let e="if "+(Blockly.Python.valueToCode(t,"TEST",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+":\n",o=Blockly.Python.statementToCode(t,"BODY")||Blockly.Python.PASS,r=new Array(t.elifs_);for(let e=0;e<t.elifs_;e++){t.elifs_[e];let o="elif "+(Blockly.Python.valueToCode(t,"ELIFTEST"+e,Blockly.Python.ORDER_NONE)||Blockly.Python.blank);o+=":\n"+(Blockly.Python.statementToCode(t,"ELIFBODY"+e)||Blockly.Python.PASS),r[e]=o}let l="";return this.orelse_&&(l="else:\n"+(Blockly.Python.statementToCode(t,"ORELSEBODY")||Blockly.Python.PASS)),e+o+r.join("")+l},BlockMirrorTextToBlocks.prototype.ast_If=function(t,e){let o=t.test,r=t.body,l=t.orelse,n=!1,i=0,s={TEST:this.convert(o,t)},c={BODY:this.convertBody(r,t)};for(;void 0!==l&&l.length>0;)1===l.length&&"If"===l[0]._astname?(this.heights.shift(),s["ELIFTEST"+i]=this.convert(l[0].test,t),c["ELIFBODY"+i]=this.convertBody(l[0].body,t),i++):(n=!0,c.ORELSEBODY=this.convertBody(l,t)),l=l[0].orelse;return BlockMirrorTextToBlocks.create_block("ast_If",t.lineno,{},s,{},{"@orelse":n,"@elifs":i},c)},Blockly.Blocks.ast_While={init:function(){this.orelse_=0,this.appendValueInput("TEST").appendField("while"),this.appendStatementInput("BODY").setCheck(null).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.CONTROL),this.updateShape_()},updateShape_:function(){this.orelse_&&!this.getInput("ELSE")?(this.appendDummyInput("ORELSETEST").appendField("else:"),this.appendStatementInput("ORELSEBODY").setCheck(null)):!this.orelse_&&this.getInput("ELSE")&&(block.removeInput("ORELSETEST"),block.removeInput("ORELSEBODY"))},mutationToDom:function(){document.createElement("mutation").setAttribute("orelse",this.orelse_)},domToMutation:function(t){this.orelse_="true"===t.getAttribute("orelse"),this.updateShape_()}},Blockly.Python.ast_While=function(t){let e="while "+(Blockly.Python.valueToCode(t,"TEST",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+":\n",o=Blockly.Python.statementToCode(t,"BODY")||Blockly.Python.PASS,r="";return this.orelse_&&(r="else:\n"+(Blockly.Python.statementToCode(t,"ORELSEBODY")||Blockly.Python.PASS)),e+o+r},BlockMirrorTextToBlocks.prototype.ast_While=function(t,e){let o=t.test,r=t.body,l=t.orelse,n={TEST:this.convert(o,t)},i={BODY:this.convertBody(r,t)},s=!1;return null!==l&&l.length>0&&(i.ORELSEBODY=this.convertBody(l,t),s=!0),BlockMirrorTextToBlocks.create_block("ast_While",t.lineno,{},n,{},{"@orelse":s},i)},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Num",message0:"%1",args0:[{type:"field_number",name:"NUM",value:0}],output:"Number",colour:BlockMirrorTextToBlocks.COLOR.MATH}),Blockly.Python.ast_Num=function(t){var e,o=parseFloat(t.getFieldValue("NUM"));return o==1/0?(o='float("inf")',e=Blockly.Python.ORDER_FUNCTION_CALL):o==-1/0?(o='-float("inf")',e=Blockly.Python.ORDER_UNARY_SIGN):e=o<0?Blockly.Python.ORDER_UNARY_SIGN:Blockly.Python.ORDER_ATOMIC,[o,e]},BlockMirrorTextToBlocks.prototype.ast_Num=function(t,e){var o=t.n;return BlockMirrorTextToBlocks.create_block("ast_Num",t.lineno,{NUM:SkAst.ffi.remapToJs(o)})},BlockMirrorTextToBlocks.BINOPS=[["+","Add",Blockly.Python.ORDER_ADDITIVE,"Return the sum of the two numbers.","increase","by"],["-","Sub",Blockly.Python.ORDER_ADDITIVE,"Return the difference of the two numbers.","decrease","by"],["*","Mult",Blockly.Python.ORDER_MULTIPLICATIVE,"Return the product of the two numbers.","multiply","by"],["/","Div",Blockly.Python.ORDER_MULTIPLICATIVE,"Return the quotient of the two numbers.","divide","by"],["%","Mod",Blockly.Python.ORDER_MULTIPLICATIVE,"Return the remainder of the first number divided by the second number.","modulo","by"],["**","Pow",Blockly.Python.ORDER_EXPONENTIATION,"Return the first number raised to the power of the second number.","raise","to"],["//","FloorDiv",Blockly.Python.ORDER_MULTIPLICATIVE,"Return the truncated quotient of the two numbers.","floor divide","by"],["<<","LShift",Blockly.Python.ORDER_BITWISE_SHIFT,"Return the left number left shifted by the right number.","left shift","by"],[">>","RShift",Blockly.Python.ORDER_BITWISE_SHIFT,"Return the left number right shifted by the right number.","right shift","by"],["|","BitOr",Blockly.Python.ORDER_BITWISE_OR,"Returns the bitwise OR of the two values.","bitwise OR","using"],["^","BitXor",Blockly.Python.ORDER_BITWISE_XOR,"Returns the bitwise XOR of the two values.","bitwise XOR","using"],["&","BitAnd",Blockly.Python.ORDER_BITWISE_AND,"Returns the bitwise AND of the two values.","bitwise AND","using"],["@","MatMult",Blockly.Python.ORDER_MULTIPLICATIVE,"Return the matrix multiplication of the two numbers.","matrix multiply","by"]];var BINOPS_SIMPLE=["Add","Sub","Mult","Div","Mod","Pow"],BINOPS_BLOCKLY_DISPLAY_FULL=BlockMirrorTextToBlocks.BINOPS.map((t=>[t[0],t[1]])),BINOPS_BLOCKLY_DISPLAY=BINOPS_BLOCKLY_DISPLAY_FULL.filter((t=>BINOPS_SIMPLE.indexOf(t[1])>=0));BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_DISPLAY_FULL=BlockMirrorTextToBlocks.BINOPS.map((t=>[t[4],t[1]])),BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_DISPLAY=BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_DISPLAY_FULL.filter((t=>BINOPS_SIMPLE.indexOf(t[1])>=0));var BINOPS_BLOCKLY_GENERATE={};BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_PREPOSITION={},BlockMirrorTextToBlocks.BINOPS.forEach((function(t){BINOPS_BLOCKLY_GENERATE[t[1]]=[" "+t[0],t[2]],BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_PREPOSITION[t[1]]=t[5]})),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_BinOpFull",message0:"%1 %2 %3",args0:[{type:"input_value",name:"A"},{type:"field_dropdown",name:"OP",options:BINOPS_BLOCKLY_DISPLAY_FULL},{type:"input_value",name:"B"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.MATH}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_BinOp",message0:"%1 %2 %3",args0:[{type:"input_value",name:"A"},{type:"field_dropdown",name:"OP",options:BINOPS_BLOCKLY_DISPLAY},{type:"input_value",name:"B"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.MATH}),Blockly.Python.ast_BinOp=function(t){var e=BINOPS_BLOCKLY_GENERATE[t.getFieldValue("OP")],o=e[0]+" ",r=e[1];return[(Blockly.Python.valueToCode(t,"A",r)||Blockly.Python.blank)+o+(Blockly.Python.valueToCode(t,"B",r)||Blockly.Python.blank),r]},BlockMirrorTextToBlocks.prototype.ast_BinOp=function(t,e){let o=t.left,r=t.op.name,l=t.right,n=BINOPS_SIMPLE.indexOf(r)>=0?"ast_BinOp":"ast_BinOpFull";return BlockMirrorTextToBlocks.create_block(n,t.lineno,{OP:r},{A:this.convert(o,t),B:this.convert(l,t)},{inline:!0})},Blockly.Python.ast_BinOpFull=Blockly.Python.ast_BinOp,BlockMirrorTextToBlocks.prototype.ast_BinOpFull=BlockMirrorTextToBlocks.prototype.ast_BinOp,BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Name",message0:"%1",args0:[{type:"field_variable",name:"VAR",variable:"%{BKY_VARIABLES_DEFAULT_NAME}"}],output:null,colour:BlockMirrorTextToBlocks.COLOR.VARIABLES,extensions:["contextMenu_variableSetterGetter_forBlockMirror"]}),Blockly.Constants.Variables.CUSTOM_CONTEXT_MENU_VARIABLE_GETTER_SETTER_MIXIN_FOR_BLOCK_MIRROR={customContextMenu:function(t){let e;if(this.isInFlyout){if("ast_Name"===this.type||"variables_get_reporter"===this.type){var o={text:Blockly.Msg.RENAME_VARIABLE,enabled:!0,callback:Blockly.Constants.Variables.RENAME_OPTION_CALLBACK_FACTORY(this)};e=this.getField("VAR").getText();var r={text:Blockly.Msg.DELETE_VARIABLE.replace("%1",e),enabled:!0,callback:Blockly.Constants.Variables.DELETE_OPTION_CALLBACK_FACTORY(this)};t.unshift(o),t.unshift(r)}}else{let o,r;"ast_Name"===this.type?(o="ast_Assign",r=Blockly.Msg.VARIABLES_GET_CREATE_SET):(o="ast_Name",r=Blockly.Msg.VARIABLES_SET_CREATE_GET);var l={enabled:this.workspace.remainingCapacity()>0};e=this.getField("VAR").getText(),l.text=r.replace("%1",e);var n=document.createElement("field");n.setAttribute("name","VAR"),n.appendChild(document.createTextNode(e));var i=document.createElement("block");i.setAttribute("type",o),i.appendChild(n),l.callback=Blockly.ContextMenu.callbackFactory(this,i),t.push(l)}}},Blockly.Extensions.registerMixin("contextMenu_variableSetterGetter_forBlockMirror",Blockly.Constants.Variables.CUSTOM_CONTEXT_MENU_VARIABLE_GETTER_SETTER_MIXIN_FOR_BLOCK_MIRROR),Blockly.Python.ast_Name=function(t){return[Blockly.Python.variableDB_.getName(t.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype.ast_Name=function(t,e){var o=t.id;return t.ctx,o.v==Blockly.Python.blank?null:BlockMirrorTextToBlocks.create_block("ast_Name",t.lineno,{VAR:o.v})},Blockly.Blocks.ast_Assign={init:function(){this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.VARIABLES),this.targetCount_=1,this.simpleTarget_=!0,this.updateShape_(),Blockly.Extensions.apply("contextMenu_variableSetterGetter",this,!1)},updateShape_:function(){this.getInput("VALUE")||(this.appendDummyInput().appendField("set"),this.appendValueInput("VALUE").appendField("="));let t=0;if(1===this.targetCount_&&this.simpleTarget_)this.setInputsInline(!0),this.getInput("VAR_ANCHOR")||this.appendDummyInput("VAR_ANCHOR").appendField(new Blockly.FieldVariable("variable"),"VAR"),this.moveInputBefore("VAR_ANCHOR","VALUE");else{for(this.setInputsInline(!0);t<this.targetCount_;t++){if(!this.getInput("TARGET"+t)){var e=this.appendValueInput("TARGET"+t);0!==t&&e.appendField("and").setAlign(Blockly.ALIGN_RIGHT)}this.moveInputBefore("TARGET"+t,"VALUE")}this.getInput("VAR_ANCHOR")&&this.removeInput("VAR_ANCHOR")}for(;this.getInput("TARGET"+t);)this.removeInput("TARGET"+t),t++},mutationToDom:function(){var t=document.createElement("mutation");return t.setAttribute("targets",this.targetCount_),t.setAttribute("simple",this.simpleTarget_),t},domToMutation:function(t){this.targetCount_=parseInt(t.getAttribute("targets"),10),this.simpleTarget_="true"===t.getAttribute("simple"),this.updateShape_()}},Blockly.Python.ast_Assign=function(t){let e=Blockly.Python.valueToCode(t,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,o=new Array(t.targetCount_);if(1===t.targetCount_&&t.simpleTarget_)o[0]=Blockly.Python.variableDB_.getName(t.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);else for(var r=0;r<t.targetCount_;r++)o[r]=Blockly.Python.valueToCode(t,"TARGET"+r,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;return o.join(" = ")+" = "+e+"\n"},BlockMirrorTextToBlocks.prototype.ast_Assign=function(t,e){let o,r=t.targets,l=t.value,n={},i=1===r.length&&"Name"===r[0]._astname;return i?(o={},n.VAR=SkAst.ffi.remapToJs(r[0].id)):o=this.convertElements("TARGET",r,t),o.VALUE=this.convert(l,t),BlockMirrorTextToBlocks.create_block("ast_Assign",t.lineno,n,o,{inline:"true"},{"@targets":r.length,"@simple":i})},Blockly.Blocks.ast_AnnAssignFull={init:function(){this.appendValueInput("TARGET").setCheck(null).appendField("set"),this.appendValueInput("ANNOTATION").setCheck(null).appendField(":"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.VARIABLES),this.initialized_=!0,this.updateShape_()},mutationToDom:function(){let t=document.createElement("mutation");return t.setAttribute("initialized",this.initialized_),t},domToMutation:function(t){this.initialized_="true"===t.getAttribute("initialized"),this.updateShape_()},updateShape_:function(t){this.initialized_&&!this.getInput("VALUE")&&this.appendValueInput("VALUE").appendField("=").setAlign(Blockly.ALIGN_RIGHT),!this.initialized_&&this.getInput("VALUE")&&this.removeInput("VALUE")}},BlockMirrorTextToBlocks.ANNOTATION_OPTIONS=[["int","int"],["float","float"],["str","str"],["bool","bool"],["None","None"]],BlockMirrorTextToBlocks.ANNOTATION_GENERATE={},BlockMirrorTextToBlocks.ANNOTATION_OPTIONS.forEach((function(t){BlockMirrorTextToBlocks.ANNOTATION_GENERATE[t[1]]=t[0]})),Blockly.Blocks.ast_AnnAssign={init:function(){this.appendDummyInput().appendField("set").appendField(new Blockly.FieldVariable("item"),"TARGET").appendField(":").appendField(new Blockly.FieldDropdown(BlockMirrorTextToBlocks.ANNOTATION_OPTIONS),"ANNOTATION"),this.appendValueInput("VALUE").setCheck(null).appendField("="),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.VARIABLES),this.strAnnotations_=!1,this.initialized_=!0},mutationToDom:function(){let t=document.createElement("mutation");return t.setAttribute("str",this.strAnnotations_),t.setAttribute("initialized",this.initialized_),t},domToMutation:function(t){this.strAnnotations_="true"===t.getAttribute("str"),this.initialized_="true"===t.getAttribute("initialized"),this.updateShape_()},updateShape_:function(t){this.initialized_&&!this.getInput("VALUE")&&this.appendValueInput("VALUE").appendField("=").setAlign(Blockly.ALIGN_RIGHT),!this.initialized_&&this.getInput("VALUE")&&this.removeInput("VALUE")}},Blockly.Python.ast_AnnAssignFull=function(t){let e=Blockly.Python.valueToCode(t,"TARGET",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,o=Blockly.Python.valueToCode(t,"ANNOTATION",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,r="";return this.initialized_&&(r=" = "+Blockly.Python.valueToCode(t,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank),e+": "+o+r+"\n"},Blockly.Python.ast_AnnAssign=function(t){var e=Blockly.Python.variableDB_.getName(t.getFieldValue("TARGET"),Blockly.Variables.NAME_TYPE);let o=t.getFieldValue("ANNOTATION");t.strAnnotations_&&(o=Blockly.Python.quote_(o));let r="";return this.initialized_&&(r=" = "+Blockly.Python.valueToCode(t,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank),e+": "+o+r+"\n"},BlockMirrorTextToBlocks.prototype.getBuiltinAnnotation=function(t){let e=!1;return"Name"===t._astname?e=SkAst.ffi.remapToJs(t.id):"Str"===t._astname&&(e=SkAst.ffi.remapToJs(t.s)),!1!==e&&this.strictAnnotations?-1!==this.strictAnnotations.indexOf(e)&&e:e},BlockMirrorTextToBlocks.prototype.ast_AnnAssign=function(t,e){let o=t.target,r=t.annotation,l=t.value,n={},i={"@initialized":!1};null!==l&&(n.VALUE=this.convert(l,t),i["@initialized"]=!0),t.simple;let s=this.getBuiltinAnnotation(r);return"Name"===o._astname&&o.id.v!==Blockly.Python.blank&&!1!==s?(i["@str"]="Str"===r._astname,BlockMirrorTextToBlocks.create_block("ast_AnnAssign",t.lineno,{TARGET:o.id.v,ANNOTATION:s},n,{inline:"true"},i)):(n.TARGET=this.convert(o,t),n.ANNOTATION=this.convert(r,t),BlockMirrorTextToBlocks.create_block("ast_AnnAssignFull",t.lineno,{},n,{inline:"true"},i))},Blockly.Blocks.ast_AugAssign={init:function(){let t=this;this.simpleTarget_=!0,this.allOptions_=!1,this.initialPreposition_="by",this.appendDummyInput("OP").appendField(new Blockly.FieldDropdown((function(){return t.allOptions_?BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_DISPLAY_FULL:BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_DISPLAY}),(function(t){this.sourceBlock_.updatePreposition_(t)})),"OP_NAME").appendField(" "),this.appendDummyInput("PREPOSITION_ANCHOR").setAlign(Blockly.ALIGN_RIGHT).appendField("by","PREPOSITION"),this.appendValueInput("VALUE"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.VARIABLES),this.updateShape_(),this.updatePreposition_(this.initialPreposition_)},updatePreposition_:function(t){let e=BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_PREPOSITION[t];this.setFieldValue(e,"PREPOSITION")},mutationToDom:function(){let t=document.createElement("mutation");return t.setAttribute("simple",this.simpleTarget_),t.setAttribute("options",this.allOptions_),t.setAttribute("preposition",this.initialPreposition_),t},domToMutation:function(t){this.simpleTarget_="true"===t.getAttribute("simple"),this.allOptions_="true"===t.getAttribute("options"),this.initialPreposition_=t.getAttribute("preposition"),this.updateShape_(),this.updatePreposition_(this.initialPreposition_)},updateShape_:function(t){this.getField("OP_NAME").getOptions(!1),this.simpleTarget_?(this.getInput("VAR_ANCHOR")||(this.appendDummyInput("VAR_ANCHOR").appendField(new Blockly.FieldVariable("variable"),"VAR"),this.moveInputBefore("VAR_ANCHOR","PREPOSITION_ANCHOR")),this.getInput("TARGET")&&this.removeInput("TARGET")):(this.getInput("VAR_ANCHOR")&&this.removeInput("VAR_ANCHOR"),this.getInput("TARGET")||(this.appendValueInput("TARGET"),this.moveInputBefore("TARGET","PREPOSITION_ANCHOR")))}},Blockly.Python.ast_AugAssign=function(t){let e;return e=t.simpleTarget_?Blockly.Python.variableDB_.getName(t.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE):Blockly.Python.valueToCode(t,"TARGET",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,e+BINOPS_BLOCKLY_GENERATE[t.getFieldValue("OP_NAME")][0]+"= "+(Blockly.Python.valueToCode(t,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+"\n"},BlockMirrorTextToBlocks.prototype.ast_AugAssign=function(t,e){let o=t.target,r=t.op.name,l=t.value,n={VALUE:this.convert(l,t)},i={OP_NAME:r},s="Name"===o._astname;s?i.VAR=SkAst.ffi.remapToJs(o.id):n.TARGET=this.convert(l,t);let c=r,a=-1===BINOPS_SIMPLE.indexOf(r);return BlockMirrorTextToBlocks.create_block("ast_AugAssign",t.lineno,i,n,{inline:"true"},{"@options":a,"@simple":s,"@preposition":c})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Str",message0:"%1",args0:[{type:"field_input",name:"TEXT",value:""}],output:"String",colour:BlockMirrorTextToBlocks.COLOR.TEXT,extensions:["text_quotes"]}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_StrChar",message0:"%1",args0:[{type:"field_dropdown",name:"TEXT",options:[["\\n","\n"],["\\t","\t"]]}],output:"String",colour:BlockMirrorTextToBlocks.COLOR.TEXT,extensions:["text_quotes"]}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_StrMultiline",message0:"%1",args0:[{type:"field_multilinetext",name:"TEXT",value:""}],output:"String",colour:BlockMirrorTextToBlocks.COLOR.TEXT,extensions:["text_quotes"]}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_StrDocstring",message0:"Docstring: %1 %2",args0:[{type:"input_dummy"},{type:"field_multilinetext",name:"TEXT",value:""}],previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.TEXT}),Blockly.Blocks.ast_Image={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.TEXT),this.src_="loading.png",this.updateShape_(),this.setOutput(!0)},mutationToDom:function(){var t=document.createElement("mutation");return t.setAttribute("src",this.src_),t},domToMutation:function(t){this.src_=t.getAttribute("src"),this.updateShape_()},updateShape_:function(){let t=this.getInput("IMAGE");t||(t=this.appendDummyInput("IMAGE"),t.appendField(new Blockly.FieldImage(this.src_,40,40,{alt:this.src_,flipRtl:"FALSE"}))),t.fieldRow[0].setValue(this.src_)}},Blockly.Python.ast_Str=function(t){let e=Blockly.Python.quote_(t.getFieldValue("TEXT"));return e=e.replace("\n","n"),[e,Blockly.Python.ORDER_ATOMIC]},Blockly.Python.ast_StrChar=function(t){switch(t.getFieldValue("TEXT")){case"\n":return["'\\n'",Blockly.Python.ORDER_ATOMIC];case"\t":return["'\\t'",Blockly.Python.ORDER_ATOMIC]}},Blockly.Python.ast_Image=function(t){return[Blockly.Python.quote_(t.src_),Blockly.Python.ORDER_FUNCTION_CALL]},Blockly.Python.ast_StrMultiline=function(t){return[Blockly.Python.multiline_quote_(t.getFieldValue("TEXT")),Blockly.Python.ORDER_ATOMIC]},Blockly.Python.ast_StrDocstring=function(t){let e=t.getFieldValue("TEXT");return"\n"!==e.charAt(0)&&(e="\n"+e),"\n"!==e.charAt(e.length-1)&&(e+="\n"),Blockly.Python.multiline_quote_(e)+"\n"},BlockMirrorTextToBlocks.prototype.isSingleChar=function(t){return"\n"===t||"\t"===t},BlockMirrorTextToBlocks.prototype.isDocString=function(t,e){return"Expr"===e._astname&&e._parent&&-1!==["FunctionDef","ClassDef"].indexOf(e._parent._astname)&&e._parent.body[0]===e},BlockMirrorTextToBlocks.prototype.isSimpleString=function(t){return t.split("\n").length<=2&&t.length<=40},BlockMirrorTextToBlocks.prototype.dedent=function(t,e,o){if(!o&&"\n"===t.charAt(0))return t;let r=t.split("\n"),l="    ".repeat(e),n=[];for(let e=0;e<r.length;e++)if(""===r[e])0!==e&&n.push("");else if(r[e].startsWith(l)){let t=r[e].substr(l.length);""===t&&e===r.length-1||n.push(t)}else{if(0!==e)return t;n.push(r[e])}return n.join("\n")},BlockMirrorTextToBlocks.prototype.ast_Str=function(t,e){let o=t.s,r=SkAst.ffi.remapToJs(o);if(BlockMirrorTextEditor.REGEX_PATTERNS[this.blockMirror.configuration.imageDetection].test(JSON.stringify(r)))return BlockMirrorTextToBlocks.create_block("ast_Image",t.lineno,{},{},{},{"@src":r});if(this.isSingleChar(r))return BlockMirrorTextToBlocks.create_block("ast_StrChar",t.lineno,{TEXT:r});if(this.isDocString(t,e)){let e=this.dedent(r,this.levelIndex-1,!0);return[BlockMirrorTextToBlocks.create_block("ast_StrDocstring",t.lineno,{TEXT:e})]}if(-1===r.indexOf("\n"))return BlockMirrorTextToBlocks.create_block("ast_Str",t.lineno,{TEXT:r});{let e=this.dedent(r,this.levelIndex-1,!1);return BlockMirrorTextToBlocks.create_block("ast_StrMultiline",t.lineno,{TEXT:e})}},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Expr",message0:"do nothing with %1",args0:[{type:"input_value",name:"VALUE"}],inputsInline:!1,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.PYTHON}),Blockly.Python.ast_Expr=function(t){return(Blockly.Python.valueToCode(t,"VALUE",Blockly.Python.ORDER_ATOMIC)||Blockly.Python.blank)+"\n"},BlockMirrorTextToBlocks.prototype.ast_Expr=function(t,e){var o=t.value,r=this.convert(o,t);return r.constructor===Array?r[0]:this.isTopLevel(e)?[this.convert(o,t)]:BlockMirrorTextToBlocks.create_block("ast_Expr",t.lineno,{},{VALUE:this.convert(o,t)})},BlockMirrorTextToBlocks.UNARYOPS=[["+","UAdd","Do nothing to the number"],["-","USub","Make the number negative"],["not","Not","Return the logical opposite of the value."],["~","Invert","Take the bit inversion of the number"]],BlockMirrorTextToBlocks.UNARYOPS.forEach((function(t){let e="ast_UnaryOp"+t[1];BlockMirrorTextToBlocks.BLOCKS.push({type:e,message0:t[0]+" %1",args0:[{type:"input_value",name:"VALUE"}],inputsInline:!1,output:null,colour:"Not"===t[1]?BlockMirrorTextToBlocks.COLOR.LOGIC:BlockMirrorTextToBlocks.COLOR.MATH}),Blockly.Python[e]=function(e){var o="Not"===t[1]?Blockly.Python.ORDER_LOGICAL_NOT:Blockly.Python.ORDER_UNARY_SIGN,r=Blockly.Python.valueToCode(e,"VALUE",o)||Blockly.Python.blank;return[t[0]+("Not"===t[1]?" ":"")+r,o]}})),BlockMirrorTextToBlocks.prototype.ast_UnaryOp=function(t,e){let o=t.op.name,r=t.operand;return BlockMirrorTextToBlocks.create_block("ast_UnaryOp"+o,t.lineno,{},{VALUE:this.convert(r,t)},{inline:!1})},BlockMirrorTextToBlocks.BOOLOPS=[["and","And",Blockly.Python.ORDER_LOGICAL_AND,"Return whether the left and right both evaluate to True."],["or","Or",Blockly.Python.ORDER_LOGICAL_OR,"Return whether either the left or right evaluate to True."]];var BOOLOPS_BLOCKLY_DISPLAY=BlockMirrorTextToBlocks.BOOLOPS.map((t=>[t[0],t[1]])),BOOLOPS_BLOCKLY_GENERATE={};BlockMirrorTextToBlocks.BOOLOPS.forEach((function(t){BOOLOPS_BLOCKLY_GENERATE[t[1]]=[" "+t[0]+" ",t[2]]})),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_BoolOp",message0:"%1 %2 %3",args0:[{type:"input_value",name:"A"},{type:"field_dropdown",name:"OP",options:BOOLOPS_BLOCKLY_DISPLAY},{type:"input_value",name:"B"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),Blockly.Python.ast_BoolOp=function(t){var e="And"===t.getFieldValue("OP")?"and":"or",o="and"===e?Blockly.Python.ORDER_LOGICAL_AND:Blockly.Python.ORDER_LOGICAL_OR;return[(Blockly.Python.valueToCode(t,"A",o)||Blockly.Python.blank)+" "+e+" "+(Blockly.Python.valueToCode(t,"B",o)||Blockly.Python.blank),o]},BlockMirrorTextToBlocks.prototype.ast_BoolOp=function(t,e){for(var o=t.op,r=t.values,l=this.convert(r[0],t),n=1;n<r.length;n+=1)l=BlockMirrorTextToBlocks.create_block("ast_BoolOp",t.lineno,{OP:o.name},{A:l,B:this.convert(r[n],t)},{inline:"true"});return l},BlockMirrorTextToBlocks.COMPARES=[["==","Eq","Return whether the two values are equal."],["!=","NotEq","Return whether the two values are not equal."],["<","Lt","Return whether the left value is less than the right value."],["<=","LtE","Return whether the left value is less than or equal to the right value."],[">","Gt","Return whether the left value is greater than the right value."],[">=","GtE","Return whether the left value is greater than or equal to the right value."],["is","Is","Return whether the left value is identical to the right value."],["is not","IsNot","Return whether the left value is not identical to the right value."],["in","In","Return whether the left value is in the right value."],["not in","NotIn","Return whether the left value is not in the right value."]];var COMPARES_BLOCKLY_DISPLAY=BlockMirrorTextToBlocks.COMPARES.map((t=>[t[0],t[1]])),COMPARES_BLOCKLY_GENERATE={};BlockMirrorTextToBlocks.COMPARES.forEach((function(t){COMPARES_BLOCKLY_GENERATE[t[1]]=t[0]})),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Compare",message0:"%1 %2 %3",args0:[{type:"input_value",name:"A"},{type:"field_dropdown",name:"OP",options:COMPARES_BLOCKLY_DISPLAY},{type:"input_value",name:"B"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),Blockly.Python.ast_Compare=function(t){var e=" "+COMPARES_BLOCKLY_GENERATE[t.getFieldValue("OP")]+" ",o=Blockly.Python.ORDER_RELATIONAL;return[(Blockly.Python.valueToCode(t,"A",o)||Blockly.Python.blank)+e+(Blockly.Python.valueToCode(t,"B",o)||Blockly.Python.blank),o]},BlockMirrorTextToBlocks.prototype.ast_Compare=function(t,e){for(var o=t.ops,r=t.left,l=t.comparators,n=this.convert(r,t),i=0;i<l.length;i+=1)n=BlockMirrorTextToBlocks.create_block("ast_Compare",t.lineno,{OP:o[i].name},{A:n,B:this.convert(l[i],t)},{inline:"true"});return n},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_AssertFull",message0:"assert %1 %2",args0:[{type:"input_value",name:"TEST"},{type:"input_value",name:"MSG"}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Assert",message0:"assert %1",args0:[{type:"input_value",name:"TEST"}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),Blockly.Python.ast_Assert=function(t){return"assert "+(Blockly.Python.valueToCode(t,"TEST",Blockly.Python.ORDER_ATOMIC)||Blockly.Python.blank)+"\n"},Blockly.Python.ast_AssertFull=function(t){return"assert "+(Blockly.Python.valueToCode(t,"TEST",Blockly.Python.ORDER_ATOMIC)||Blockly.Python.blank)+", "+(Blockly.Python.valueToCode(t,"MSG",Blockly.Python.ORDER_ATOMIC)||Blockly.Python.blank)+"\n"},BlockMirrorTextToBlocks.prototype.ast_Assert=function(t,e){var o=t.test,r=t.msg;return null==r?BlockMirrorTextToBlocks.create_block("ast_Assert",t.lineno,{},{TEST:this.convert(o,t)}):BlockMirrorTextToBlocks.create_block("ast_AssertFull",t.lineno,{},{TEST:this.convert(o,t),MSG:this.convert(r,t)})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_NameConstantNone",message0:"None",args0:[],output:"None",colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_NameConstantBoolean",message0:"%1",args0:[{type:"field_dropdown",name:"BOOL",options:[["True","TRUE"],["False","FALSE"]]}],output:"Boolean",colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),Blockly.Python.ast_NameConstantBoolean=function(t){return["TRUE"==t.getFieldValue("BOOL")?"True":"False",Blockly.Python.ORDER_ATOMIC]},Blockly.Python.ast_NameConstantNone=function(t){return["None",Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype.ast_NameConstant=function(t,e){let o=t.value;return o===SkAst.builtin.none.none$?BlockMirrorTextToBlocks.create_block("ast_NameConstantNone",t.lineno,{}):o===SkAst.builtin.bool.true$?BlockMirrorTextToBlocks.create_block("ast_NameConstantBoolean",t.lineno,{BOOL:"TRUE"}):o===SkAst.builtin.bool.false$?BlockMirrorTextToBlocks.create_block("ast_NameConstantBoolean",t.lineno,{BOOL:"FALSE"}):void 0},Blockly.Blocks.ast_List={init:function(){this.setHelpUrl(Blockly.Msg.LISTS_CREATE_WITH_HELPURL),this.setColour(BlockMirrorTextToBlocks.COLOR.LIST),this.itemCount_=3,this.updateShape_(),this.setOutput(!0,"List"),this.setMutator(new Blockly.Mutator(["ast_List_create_with_item"]))},mutationToDom:function(){var t=document.createElement("mutation");return t.setAttribute("items",this.itemCount_),t},domToMutation:function(t){this.itemCount_=parseInt(t.getAttribute("items"),10),this.updateShape_()},decompose:function(t){var e=t.newBlock("ast_List_create_with_container");e.initSvg();for(var o=e.getInput("STACK").connection,r=0;r<this.itemCount_;r++){var l=t.newBlock("ast_List_create_with_item");l.initSvg(),o.connect(l.previousConnection),o=l.nextConnection}return e},compose:function(t){for(var e=t.getInputTargetBlock("STACK"),o=[];e;)o.push(e.valueConnection_),e=e.nextConnection&&e.nextConnection.targetBlock();for(var r=0;r<this.itemCount_;r++){var l=this.getInput("ADD"+r).connection.targetConnection;l&&-1==o.indexOf(l)&&l.disconnect()}for(this.itemCount_=o.length,this.updateShape_(),r=0;r<this.itemCount_;r++)Blockly.Mutator.reconnect(o[r],this,"ADD"+r)},saveConnections:function(t){for(var e=t.getInputTargetBlock("STACK"),o=0;e;){var r=this.getInput("ADD"+o);e.valueConnection_=r&&r.connection.targetConnection,o++,e=e.nextConnection&&e.nextConnection.targetBlock()}},updateShape_:function(){this.itemCount_&&this.getInput("EMPTY")?this.removeInput("EMPTY"):this.itemCount_||this.getInput("EMPTY")||this.appendDummyInput("EMPTY").appendField("create empty list []");for(var t=0;t<this.itemCount_;t++)if(!this.getInput("ADD"+t)){var e=this.appendValueInput("ADD"+t);0==t?e.appendField("create list with ["):e.appendField(",").setAlign(Blockly.ALIGN_RIGHT)}for(;this.getInput("ADD"+t);)this.removeInput("ADD"+t),t++;this.getInput("TAIL")&&this.removeInput("TAIL"),this.itemCount_&&this.appendDummyInput("TAIL").appendField("]").setAlign(Blockly.ALIGN_RIGHT)}},Blockly.Blocks.ast_List_create_with_container={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.LIST),this.appendDummyInput().appendField("Add new list elements below"),this.appendStatementInput("STACK"),this.contextMenu=!1}},Blockly.Blocks.ast_List_create_with_item={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.LIST),this.appendDummyInput().appendField("Element"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.contextMenu=!1}},Blockly.Python.ast_List=function(t){for(var e=new Array(t.itemCount_),o=0;o<t.itemCount_;o++)e[o]=Blockly.Python.valueToCode(t,"ADD"+o,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;return["["+e.join(", ")+"]",Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype.ast_List=function(t,e){var o=t.elts;return t.ctx,BlockMirrorTextToBlocks.create_block("ast_List",t.lineno,{},this.convertElements("ADD",o,t),{inline:o.length>3?"false":"true"},{"@items":o.length})},Blockly.Blocks.ast_Tuple={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.TUPLE),this.itemCount_=3,this.updateShape_(),this.setOutput(!0,"Tuple"),this.setMutator(new Blockly.Mutator(["ast_Tuple_create_with_item"]))},mutationToDom:function(){var t=document.createElement("mutation");return t.setAttribute("items",this.itemCount_),t},domToMutation:function(t){this.itemCount_=parseInt(t.getAttribute("items"),10),this.updateShape_()},decompose:function(t){var e=t.newBlock("ast_Tuple_create_with_container");e.initSvg();for(var o=e.getInput("STACK").connection,r=0;r<this.itemCount_;r++){var l=t.newBlock("ast_Tuple_create_with_item");l.initSvg(),o.connect(l.previousConnection),o=l.nextConnection}return e},compose:function(t){for(var e=t.getInputTargetBlock("STACK"),o=[];e;)o.push(e.valueConnection_),e=e.nextConnection&&e.nextConnection.targetBlock();for(var r=0;r<this.itemCount_;r++){var l=this.getInput("ADD"+r).connection.targetConnection;l&&-1==o.indexOf(l)&&l.disconnect()}for(this.itemCount_=o.length,this.updateShape_(),r=0;r<this.itemCount_;r++)Blockly.Mutator.reconnect(o[r],this,"ADD"+r)},saveConnections:function(t){for(var e=t.getInputTargetBlock("STACK"),o=0;e;){var r=this.getInput("ADD"+o);e.valueConnection_=r&&r.connection.targetConnection,o++,e=e.nextConnection&&e.nextConnection.targetBlock()}},updateShape_:function(){this.itemCount_&&this.getInput("EMPTY")?this.removeInput("EMPTY"):this.itemCount_||this.getInput("EMPTY")||this.appendDummyInput("EMPTY").appendField("()");for(var t=0;t<this.itemCount_;t++)if(!this.getInput("ADD"+t)){var e=this.appendValueInput("ADD"+t);0===t?e.appendField("(").setAlign(Blockly.ALIGN_RIGHT):e.appendField(",").setAlign(Blockly.ALIGN_RIGHT)}for(;this.getInput("ADD"+t);)this.removeInput("ADD"+t),t++;if(this.getInput("TAIL")&&this.removeInput("TAIL"),this.itemCount_){let t=this.appendDummyInput("TAIL");1===this.itemCount_?t.appendField(",)"):t.appendField(")"),t.setAlign(Blockly.ALIGN_RIGHT)}}},Blockly.Blocks.ast_Tuple_create_with_container={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.TUPLE),this.appendDummyInput().appendField("Add new tuple elements below"),this.appendStatementInput("STACK"),this.contextMenu=!1}},Blockly.Blocks.ast_Tuple_create_with_item={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.TUPLE),this.appendDummyInput().appendField("Element"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.contextMenu=!1}},Blockly.Python.ast_Tuple=function(t){for(var e=new Array(t.itemCount_),o=0;o<t.itemCount_;o++)e[o]=Blockly.Python.valueToCode(t,"ADD"+o,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;let r="";return 1==t.itemCount_&&(r=", "),["("+e.join(", ")+r+")",Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype.ast_Tuple=function(t,e){var o=t.elts;return t.ctx,BlockMirrorTextToBlocks.create_block("ast_Tuple",t.lineno,{},this.convertElements("ADD",o,t),{inline:o.length>4?"false":"true"},{"@items":o.length})},Blockly.Blocks.ast_Set={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.SET),this.itemCount_=3,this.updateShape_(),this.setOutput(!0,"Set"),this.setMutator(new Blockly.Mutator(["ast_Set_create_with_item"]))},mutationToDom:function(){var t=document.createElement("mutation");return t.setAttribute("items",this.itemCount_),t},domToMutation:function(t){this.itemCount_=parseInt(t.getAttribute("items"),10),this.updateShape_()},decompose:function(t){var e=t.newBlock("ast_Set_create_with_container");e.initSvg();for(var o=e.getInput("STACK").connection,r=0;r<this.itemCount_;r++){var l=t.newBlock("ast_Set_create_with_item");l.initSvg(),o.connect(l.previousConnection),o=l.nextConnection}return e},compose:function(t){for(var e=t.getInputTargetBlock("STACK"),o=[];e;)o.push(e.valueConnection_),e=e.nextConnection&&e.nextConnection.targetBlock();for(var r=0;r<this.itemCount_;r++){var l=this.getInput("ADD"+r).connection.targetConnection;l&&-1==o.indexOf(l)&&l.disconnect()}for(this.itemCount_=o.length,this.updateShape_(),r=0;r<this.itemCount_;r++)Blockly.Mutator.reconnect(o[r],this,"ADD"+r)},saveConnections:function(t){for(var e=t.getInputTargetBlock("STACK"),o=0;e;){var r=this.getInput("ADD"+o);e.valueConnection_=r&&r.connection.targetConnection,o++,e=e.nextConnection&&e.nextConnection.targetBlock()}},updateShape_:function(){this.itemCount_&&this.getInput("EMPTY")?this.removeInput("EMPTY"):this.itemCount_||this.getInput("EMPTY")||this.appendDummyInput("EMPTY").appendField("create empty set");for(var t=0;t<this.itemCount_;t++)if(!this.getInput("ADD"+t)){var e=this.appendValueInput("ADD"+t);0===t?e.appendField("create set with {").setAlign(Blockly.ALIGN_RIGHT):e.appendField(",").setAlign(Blockly.ALIGN_RIGHT)}for(;this.getInput("ADD"+t);)this.removeInput("ADD"+t),t++;this.getInput("TAIL")&&this.removeInput("TAIL"),this.itemCount_&&this.appendDummyInput("TAIL").appendField("}").setAlign(Blockly.ALIGN_RIGHT)}},Blockly.Blocks.ast_Set_create_with_container={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.SET),this.appendDummyInput().appendField("Add new set elements below"),this.appendStatementInput("STACK"),this.contextMenu=!1}},Blockly.Blocks.ast_Set_create_with_item={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.SET),this.appendDummyInput().appendField("Element"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.contextMenu=!1}},Blockly.Python.ast_Set=function(t){if(0===t.itemCount_)return["set()",Blockly.Python.ORDER_FUNCTION_CALL];for(var e=new Array(t.itemCount_),o=0;o<t.itemCount_;o++)e[o]=Blockly.Python.valueToCode(t,"ADD"+o,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;return["{"+e.join(", ")+"}",Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype.ast_Set=function(t,e){var o=t.elts;return BlockMirrorTextToBlocks.create_block("ast_Set",t.lineno,{},this.convertElements("ADD",o,t),{inline:o.length>3?"false":"true"},{"@items":o.length})},Blockly.Blocks.ast_DictItem={init:function(){this.appendValueInput("KEY").setCheck(null),this.appendValueInput("VALUE").setCheck(null).appendField(":"),this.setInputsInline(!0),this.setOutput(!0,"DictPair"),this.setColour(BlockMirrorTextToBlocks.COLOR.DICTIONARY)}},Blockly.Blocks.ast_Dict={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.DICTIONARY),this.itemCount_=3,this.updateShape_(),this.setOutput(!0,"Dict"),this.setMutator(new Blockly.Mutator(["ast_Dict_create_with_item"]))},mutationToDom:function(){var t=document.createElement("mutation");return t.setAttribute("items",this.itemCount_),t},domToMutation:function(t){this.itemCount_=parseInt(t.getAttribute("items"),10),this.updateShape_()},decompose:function(t){var e=t.newBlock("ast_Dict_create_with_container");e.initSvg();for(var o=e.getInput("STACK").connection,r=0;r<this.itemCount_;r++){var l=t.newBlock("ast_Dict_create_with_item");l.initSvg(),o.connect(l.previousConnection),o=l.nextConnection}return e},compose:function(t){for(var e=t.getInputTargetBlock("STACK"),o=[];e;)o.push(e.valueConnection_),e=e.nextConnection&&e.nextConnection.targetBlock();for(var r=0;r<this.itemCount_;r++){var l=this.getInput("ADD"+r).connection.targetConnection;if(l&&-1==o.indexOf(l)){let t=l.getSourceBlock().getInput("KEY");t.connection.targetConnection&&t.connection.targetConnection.getSourceBlock().unplug(!0);let e=l.getSourceBlock().getInput("VALUE");e.connection.targetConnection&&e.connection.targetConnection.getSourceBlock().unplug(!0),l.disconnect(),l.getSourceBlock().dispose()}}for(this.itemCount_=o.length,this.updateShape_(),r=0;r<this.itemCount_;r++)if(Blockly.Mutator.reconnect(o[r],this,"ADD"+r),!o[r]){let t=this.workspace.newBlock("ast_DictItem");t.setDeletable(!1),t.setMovable(!1),t.initSvg(),this.getInput("ADD"+r).connection.connect(t.outputConnection),t.render()}},saveConnections:function(t){for(var e=t.getInputTargetBlock("STACK"),o=0;e;){var r=this.getInput("ADD"+o);e.valueConnection_=r&&r.connection.targetConnection,o++,e=e.nextConnection&&e.nextConnection.targetBlock()}},updateShape_:function(){this.itemCount_&&this.getInput("EMPTY")?this.removeInput("EMPTY"):this.itemCount_||this.getInput("EMPTY")||this.appendDummyInput("EMPTY").appendField("empty dictionary");for(var t=0;t<this.itemCount_;t++)if(!this.getInput("ADD"+t)){var e=this.appendValueInput("ADD"+t).setCheck("DictPair");0===t&&e.appendField("create dict with").setAlign(Blockly.ALIGN_RIGHT)}for(;this.getInput("ADD"+t);)this.removeInput("ADD"+t),t++}},Blockly.Blocks.ast_Dict_create_with_container={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.DICTIONARY),this.appendDummyInput().appendField("Add new dict elements below"),this.appendStatementInput("STACK"),this.contextMenu=!1}},Blockly.Blocks.ast_Dict_create_with_item={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.DICTIONARY),this.appendDummyInput().appendField("Element"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.contextMenu=!1}},Blockly.Python.ast_Dict=function(t){for(var e=new Array(t.itemCount_),o=0;o<t.itemCount_;o++){let r=t.getInputTargetBlock("ADD"+o);if(null===r||"ast_DictItem"!=r.type){e[o]=Blockly.Python.blank+": "+Blockly.Python.blank;continue}let l=Blockly.Python.valueToCode(r,"KEY",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,n=Blockly.Python.valueToCode(r,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank;e[o]=l+": "+n}return["{"+e.join(", ")+"}",Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype.ast_Dict=function(t,e){let o=t.keys,r=t.values;if(null===o)return BlockMirrorTextToBlocks.create_block("ast_Dict",t.lineno,{},{},{inline:"false"},{"@items":0});let l={};for(let e=0;e<o.length;e++){let n=o[e],i=r[e];l["ADD"+e]=BlockMirrorTextToBlocks.create_block("ast_DictItem",t.lineno,{},{KEY:this.convert(n,t),VALUE:this.convert(i,t)},this.LOCKED_BLOCK)}return BlockMirrorTextToBlocks.create_block("ast_Dict",t.lineno,{},l,{inline:"false"},{"@items":o.length})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Starred",message0:"*%1",args0:[{type:"input_value",name:"VALUE"}],inputsInline:!1,output:null,colour:BlockMirrorTextToBlocks.COLOR.VARIABLES}),Blockly.Python.ast_Starred=function(t){var e=Blockly.Python.ORDER_NONE;return["*"+(Blockly.Python.valueToCode(t,"VALUE",e)||Blockly.Python.blank),e]},BlockMirrorTextToBlocks.prototype.ast_Starred=function(t,e){let o=t.value;return t.ctx,BlockMirrorTextToBlocks.create_block("ast_Starred",t.lineno,{},{VALUE:this.convert(o,t)},{inline:!0})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_IfExp",message0:"%1 if %2 else %3",args0:[{type:"input_value",name:"BODY"},{type:"input_value",name:"TEST"},{type:"input_value",name:"ORELSE"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),Blockly.Python.ast_IfExp=function(t){var e=Blockly.Python.valueToCode(t,"TEST",Blockly.Python.ORDER_CONDITIONAL)||Blockly.Python.blank;return[(Blockly.Python.valueToCode(t,"BODY",Blockly.Python.ORDER_CONDITIONAL)||Blockly.Python.blank)+" if "+e+" else "+(Blockly.Python.valueToCode(t,"ORELSE",Blockly.Python.ORDER_CONDITIONAL)||Blockly.Python.blank)+"\n",Blockly.Python.ORDER_CONDITIONAL]},BlockMirrorTextToBlocks.prototype.ast_IfExp=function(t,e){let o=t.test,r=t.body,l=t.orelse;return BlockMirrorTextToBlocks.create_block("ast_IfExp",t.lineno,{},{TEST:this.convert(o,t),BODY:this.convert(r,t),ORELSE:this.convert(l,t)})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_AttributeFull",lastDummyAlign0:"RIGHT",message0:"%1 . %2",args0:[{type:"input_value",name:"VALUE"},{type:"field_input",name:"ATTR",text:"default"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.OO}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Attribute",message0:"%1 . %2",args0:[{type:"field_variable",name:"VALUE",variable:"variable"},{type:"field_input",name:"ATTR",text:"attribute"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.OO}),Blockly.Python.ast_Attribute=function(t){return[Blockly.Python.variableDB_.getName(t.getFieldValue("VALUE"),Blockly.Variables.NAME_TYPE)+"."+t.getFieldValue("ATTR"),Blockly.Python.ORDER_MEMBER]},Blockly.Python.ast_AttributeFull=function(t){return[(Blockly.Python.valueToCode(t,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+"."+t.getFieldValue("ATTR"),Blockly.Python.ORDER_MEMBER]},BlockMirrorTextToBlocks.prototype.ast_Attribute=function(t,e){let o=t.value,r=t.attr;return"Name"==o._astname?BlockMirrorTextToBlocks.create_block("ast_Attribute",t.lineno,{VALUE:SkAst.ffi.remapToJs(o.id),ATTR:SkAst.ffi.remapToJs(r)}):BlockMirrorTextToBlocks.create_block("ast_AttributeFull",t.lineno,{ATTR:SkAst.ffi.remapToJs(r)},{VALUE:this.convert(o,t)})},Blockly.Blocks.ast_Call={init:function(){this.givenColour_=BlockMirrorTextToBlocks.COLOR.FUNCTIONS,this.setInputsInline(!0),this.arguments_=[],this.argumentVarModels_=[],this.argumentCount_=0,this.quarkConnections_={},this.quarkIds_=null,this.showParameterNames_=!1,this.returns_=!0,this.isMethod_=!1,this.name_=null,this.message_="function",this.premessage_="",this.module_="",this.updateShape_()},getProcedureCall:function(){return this.name_},renameProcedure:function(t,e){(null===this.name_||Blockly.Names.equals(t,this.name_))&&(this.name_=e,this.updateShape_())},setProcedureParameters_:function(t,e){var o=Blockly.Procedures.getDefinition(this.getProcedureCall(),this.workspace),r=o&&o.mutator&&o.mutator.isVisible();if(r||(this.quarkConnections_={},this.quarkIds_=null),!e)return!1;if(t.join("\n")==this.arguments_.join("\n"))return this.quarkIds_=e,!1;if(e.length!==t.length)throw RangeError("paramNames and paramIds must be the same length.");this.setCollapsed(!1),this.quarkIds_||(this.quarkConnections_={},this.quarkIds_=[]);var l=this.rendered;this.rendered=!1;for(let t=0;t<this.arguments_.length;t++){var n=this.getInput("ARG"+t);if(n){let o=n.connection.targetConnection;this.quarkConnections_[this.quarkIds_[t]]=o,r&&o&&-1===e.indexOf(this.quarkIds_[t])&&(o.disconnect(),o.getSourceBlock().bumpNeighbours_())}}if(this.arguments_=[].concat(t),this.argumentCount_=this.arguments_.length,this.argumentVarModels_=[],this.updateShape_(),this.quarkIds_=e,this.quarkIds_)for(let t=0;t<this.arguments_.length;t++){var i=this.quarkIds_[t];if(i in this.quarkConnections_){let e=this.quarkConnections_[i];Blockly.Mutator.reconnect(e,this,"ARG"+t)||delete this.quarkConnections_[i]}}return this.rendered=l,this.rendered&&this.render(),!0},updateShape_:function(){if(this.isMethod_&&!this.getInput("FUNC")){let t=this.appendValueInput("FUNC");""!==this.premessage_&&t.appendField(this.premessage_)}else!this.isMethod_&&this.getInput("FUNC")&&this.removeInput("FUNC");let t,e=this.getDrawnArgumentCount_(),o=this.getInput("MESSAGE_AREA");for(0===e?(o?o.removeField("MESSAGE"):o=this.appendDummyInput("MESSAGE_AREA").setAlign(Blockly.ALIGN_RIGHT),o.appendField(new Blockly.FieldLabel(this.message_+" ("),"MESSAGE")):o&&this.removeInput("MESSAGE_AREA"),t=0;t<e;t++){let e=this.arguments_[t],o=this.parseArgument_(e);0===t&&(o=this.message_+" ("+o);let r=this.getField("ARGNAME"+t);if(r){Blockly.Events.disable();try{r.setValue(o)}finally{Blockly.Events.enable()}}else r=new Blockly.FieldLabel(o),this.appendValueInput("ARG"+t).setAlign(Blockly.ALIGN_RIGHT).appendField(r,"ARGNAME"+t).init();o?r.setVisible(!0):r.setVisible(!1)}this.getInput("CLOSE_PAREN")||this.appendDummyInput("CLOSE_PAREN").setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldLabel(")")),0===e?(this.isMethod_&&this.moveInputBefore("FUNC","MESSAGE_AREA"),this.moveInputBefore("MESSAGE_AREA","CLOSE_PAREN")):this.isMethod_&&this.moveInputBefore("FUNC","CLOSE_PAREN");for(let e=0;e<t;e++)this.moveInputBefore("ARG"+e,"CLOSE_PAREN");for(this.setReturn_(this.returns_,!1);this.getInput("ARG"+t);)this.removeInput("ARG"+t),t++;this.setColour(this.givenColour_)},mutationToDom:function(){var t=document.createElement("mutation");let e=this.getProcedureCall();t.setAttribute("name",null===e?"*":e),t.setAttribute("arguments",this.argumentCount_),t.setAttribute("returns",this.returns_),t.setAttribute("parameters",this.showParameterNames_),t.setAttribute("method",this.isMethod_),t.setAttribute("message",this.message_),t.setAttribute("premessage",this.premessage_),t.setAttribute("module",this.module_),t.setAttribute("colour",this.givenColour_);for(var o=0;o<this.arguments_.length;o++){var r=document.createElement("arg");r.setAttribute("name",this.arguments_[o]),t.appendChild(r)}return t},domToMutation:function(t){this.name_=t.getAttribute("name"),this.name_="*"===this.name_?null:this.name_,this.argumentCount_=parseInt(t.getAttribute("arguments"),10),this.showParameterNames_="true"===t.getAttribute("parameters"),this.returns_="true"===t.getAttribute("returns"),this.isMethod_="true"===t.getAttribute("method"),this.message_=t.getAttribute("message"),this.premessage_=t.getAttribute("premessage"),this.module_=t.getAttribute("module"),this.givenColour_=parseInt(t.getAttribute("colour"),10);for(var e,o=[],r=[],l=0;e=t.childNodes[l];l++)"arg"===e.nodeName.toLowerCase()&&(o.push(e.getAttribute("name")),r.push(e.getAttribute("paramId")));this.setProcedureParameters_(o,r)||this.updateShape_(),null!==this.name_&&this.renameProcedure(this.getProcedureCall(),this.name_)},getVarModels:function(){return this.argumentVarModels_},customContextMenu:function(t){if(!this.workspace.isMovable())return;let e=this.workspace,o=this,r={enabled:!0};r.text=Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF;let l=this.getProcedureCall();r.callback=function(){let t=Blockly.Procedures.getDefinition(l,e);t&&(e.centerOnBlock(t.id),t.select())},t.push(r),t.push({enabled:!0,text:"Show/Hide parameters",callback:function(){o.showParameterNames_=!o.showParameterNames_,o.updateShape_(),o.render()}}),t.push({enabled:!0,text:this.returns_?"Make statement":"Make expression",callback:function(){o.returns_=!o.returns_,o.setReturn_(o.returns_,!0)}})},setReturn_:function(t,e){this.unplug(!0),t?(this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0)):(this.setOutput(!1),this.setPreviousStatement(!0),this.setNextStatement(!0)),e&&this.rendered&&this.render()},parseArgument_:function(t){return t.startsWith("KWARGS:")?"unpack":t.startsWith("KEYWORD:")?t.substring(8)+"=":this.showParameterNames_&&t.startsWith("KNOWN_ARG:")?t.substring(10)+"=":""},getDrawnArgumentCount_:function(){return Math.min(this.argumentCount_,this.arguments_.length)}},Blockly.Python.ast_Call=function(t){t.module_&&(Blockly.Python.definitions_["import_"+t.module_]=BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_IMPORTS[t.module_]);let e="";t.isMethod_&&(e=Blockly.Python.valueToCode(t,"FUNC",Blockly.Python.ORDER_FUNCTION_CALL)||Blockly.Python.blank),e+=this.name_;for(var o=[],r=0;r<t.arguments_.length;r++){let e=Blockly.Python.valueToCode(t,"ARG"+r,Blockly.Python.ORDER_NONE)||Blockly.Python.blank,l=t.arguments_[r];l.startsWith("KWARGS:")?o[r]="**"+e:l.startsWith("KEYWORD:")?o[r]=l.substring(8)+"="+e:o[r]=e}let l=e+"("+o.join(", ")+")";return t.returns_?[l,Blockly.Python.ORDER_FUNCTION_CALL]:l+"\n"},BlockMirrorTextToBlocks.prototype.getAsModule=function(t){if("Name"===t._astname)return SkAst.ffi.remapToJs(t.id);if("Attribute"!==t._astname)return null;{let e=this.getAsModule(t.value);if(null!==e)return e+"."+SkAst.ffi.remapToJs(t.attr)}},BlockMirrorTextToBlocks.prototype.ast_Call=function(t,e){let o=t.func,r=t.args,l=t.keywords,n=null,i=!1,s=null,c="",a="",u="",h=null,_=BlockMirrorTextToBlocks.COLOR.FUNCTIONS;if("Name"===o._astname)a=u=SkAst.ffi.remapToJs(o.id),u in this.FUNCTION_SIGNATURES&&(n=this.FUNCTION_SIGNATURES[SkAst.ffi.remapToJs(o.id)]);else if("Attribute"===o._astname){i=!0,h=o.value;let t=this.getAsModule(h),e=SkAst.ffi.remapToJs(o.attr);a="."+e,t in this.MODULE_FUNCTION_SIGNATURES?(n=this.MODULE_FUNCTION_SIGNATURES[t][e],s=t,a=u=t+a,i=!1):e in this.METHOD_SIGNATURES?(n=this.METHOD_SIGNATURES[e],u=a):u=a}else i=!0,a="",u="",h=o;let k=!0;if(null!=n){if(n.custom)try{return n.custom(t,e,this)}catch(t){console.error(t)}"returns"in n&&(k=n.returns),"message"in n&&(a=n.message),"premessage"in n&&(c=n.premessage),"colour"in n&&(_=n.colour)}k=k||"Expr"!==e._astname;let T,p={},B={"@arguments":(null!==r?r.length:0)+(null!==l?l.length:0),"@returns":k,"@parameters":!0,"@method":i,"@name":u,"@message":a,"@premessage":c,"@colour":_,"@module":s||""},d=0;if(null!==r)for(let e=0;e<r.length;e+=1,d+=1)p["ARG"+d]=this.convert(r[e],t),B["UNKNOWN_ARG:"+d]=null;if(null!==l)for(let e=0;e<l.length;e+=1,d+=1){let o=l[e],r=o.arg,n=o.value;null===r?(p["ARG"+d]=this.convert(n,t),B["KWARGS:"+d]=null):(p["ARG"+d]=this.convert(n,t),B["KEYWORD:"+SkAst.ffi.remapToJs(r)]=null)}return i?(p.FUNC=this.convert(h,t),T=BlockMirrorTextToBlocks.create_block("ast_Call",t.lineno,{},p,{inline:!0},B)):T=BlockMirrorTextToBlocks.create_block("ast_Call",t.lineno,{},p,{inline:!0},B),k?T:[T]},Blockly.Blocks.ast_Raise={init:function(){this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.EXCEPTIONS),this.exc_=!0,this.cause_=!1,this.appendDummyInput().appendField("raise"),this.updateShape_()},updateShape_:function(){this.exc_&&!this.getInput("EXC")?this.appendValueInput("EXC").setCheck(null):!this.exc_&&this.getInput("EXC")&&this.removeInput("EXC"),this.cause_&&!this.getInput("CAUSE")?this.appendValueInput("CAUSE").setCheck(null).appendField("from"):!this.cause_&&this.getInput("CAUSE")&&this.removeInput("CAUSE"),this.cause_&&this.exc_&&this.moveInputBefore("EXC","CAUSE")},mutationToDom:function(){var t=document.createElement("mutation");return t.setAttribute("exc",this.exc_),t.setAttribute("cause",this.cause_),t},domToMutation:function(t){this.exc_="true"===t.getAttribute("exc"),this.cause_="true"===t.getAttribute("cause"),this.updateShape_()}},Blockly.Python.ast_Raise=function(t){if(this.exc_){let e=Blockly.Python.valueToCode(t,"EXC",Blockly.Python.ORDER_NONE)||Blockly.Python.blank;return this.cause_?"raise "+e+" from "+(Blockly.Python.valueToCode(t,"CAUSE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+"\n":"raise "+e+"\n"}return"raise\n"},BlockMirrorTextToBlocks.prototype.ast_Raise=function(t,e){var o=t.exc,r=t.cause;let l={},n=!1,i=!1;return null!==o&&(l.EXC=this.convert(o,t),n=!0),null!==r&&(l.CAUSE=this.convert(r,t),i=!0),BlockMirrorTextToBlocks.create_block("ast_Raise",t.lineno,{},l,{},{"@exc":n,"@cause":i})},Blockly.Blocks.ast_Delete={init:function(){this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.VARIABLES),this.targetCount_=1,this.appendDummyInput().appendField("delete"),this.updateShape_()},updateShape_:function(){for(var t=0;t<this.targetCount_;t++)if(!this.getInput("TARGET"+t)){var e=this.appendValueInput("TARGET"+t);0!==t&&e.appendField(",").setAlign(Blockly.ALIGN_RIGHT)}for(;this.getInput("TARGET"+t);)this.removeInput("TARGET"+t),t++},mutationToDom:function(){var t=document.createElement("mutation");return t.setAttribute("targets",this.targetCount_),t},domToMutation:function(t){this.targetCount_=parseInt(t.getAttribute("targets"),10),this.updateShape_()}},Blockly.Python.ast_Delete=function(t){for(var e=new Array(t.targetCount_),o=0;o<t.targetCount_;o++)e[o]=Blockly.Python.valueToCode(t,"TARGET"+o,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;return"del "+e.join(", ")+"\n"},BlockMirrorTextToBlocks.prototype.ast_Delete=function(t,e){let o=t.targets;return BlockMirrorTextToBlocks.create_block("ast_Delete",t.lineno,{},this.convertElements("TARGET",o,t),{inline:"true"},{"@targets":o.length})},Blockly.Blocks.ast_Subscript={init:function(){this.setInputsInline(!0),this.setOutput(!0),this.setColour(BlockMirrorTextToBlocks.COLOR.SEQUENCES),this.sliceKinds_=["I"],this.appendValueInput("VALUE").setCheck(null),this.appendDummyInput("OPEN_BRACKET").appendField("["),this.appendDummyInput("CLOSE_BRACKET").appendField("]"),this.updateShape_()},setExistence:function(t,e,o){return e&&!this.getInput(t)?o?this.appendDummyInput(t):this.appendValueInput(t):(!e&&this.getInput(t)&&this.removeInput(t),null)},createSlice_:function(t,e){let o=this.setExistence("COMMA"+t,0!==t,!0);o&&o.appendField(",");let r="I"===e.charAt(0);o=this.setExistence("INDEX"+t,r,!1),o=this.setExistence("SLICELOWER"+t,!r&&"1"===e.charAt(1),!1),o=this.setExistence("SLICECOLON"+t,!r,!0),o&&o.appendField(":").setAlign(Blockly.ALIGN_RIGHT),o=this.setExistence("SLICEUPPER"+t,!r&&"1"===e.charAt(2),!1),o=this.setExistence("SLICESTEP"+t,!r&&"1"===e.charAt(3),!1),o&&o.appendField(":").setAlign(Blockly.ALIGN_RIGHT)},updateShape_:function(){for(var t=0;t<this.sliceKinds_.length;t++)this.createSlice_(t,this.sliceKinds_[t]);for(let e=0;e<t;e++){0!==e&&this.moveInputBefore("COMMA"+e,"CLOSE_BRACKET");let t=this.sliceKinds_[e];"I"===t.charAt(0)?this.moveInputBefore("INDEX"+e,"CLOSE_BRACKET"):("1"===t.charAt(1)&&this.moveInputBefore("SLICELOWER"+e,"CLOSE_BRACKET"),this.moveInputBefore("SLICECOLON"+e,"CLOSE_BRACKET"),"1"===t.charAt(2)&&this.moveInputBefore("SLICEUPPER"+e,"CLOSE_BRACKET"),"1"===t.charAt(3)&&this.moveInputBefore("SLICESTEP"+e,"CLOSE_BRACKET"))}for(;this.getInput("TARGET"+t)||this.getInput("SLICECOLON");)this.removeInput("COMMA"+t,!0),this.getInput("INDEX"+t)?this.removeInput("INDEX"+t):(this.removeInput("SLICELOWER"+t,!0),this.removeInput("SLICECOLON"+t,!0),this.removeInput("SLICEUPPER"+t,!0),this.removeInput("SLICESTEP"+t,!0)),t++},mutationToDom:function(){let t=document.createElement("mutation");for(let e=0;e<this.sliceKinds_.length;e++){let o=document.createElement("arg");o.setAttribute("name",this.sliceKinds_[e]),t.appendChild(o)}return t},domToMutation:function(t){this.sliceKinds_=[];for(let e,o=0;e=t.childNodes[o];o++)"arg"===e.nodeName.toLowerCase()&&this.sliceKinds_.push(e.getAttribute("name"));this.updateShape_()}},Blockly.Python.ast_Subscript=function(t){let e=Blockly.Python.valueToCode(t,"VALUE",Blockly.Python.ORDER_MEMBER)||Blockly.Python.blank;var o=new Array(t.sliceKinds_.length);for(let e=0;e<t.sliceKinds_.length;e++){let r=t.sliceKinds_[e];"I"===r.charAt(0)?o[e]=Blockly.Python.valueToCode(t,"INDEX"+e,Blockly.Python.ORDER_MEMBER)||Blockly.Python.blank:(o[e]="","1"===r.charAt(1)&&(o[e]+=Blockly.Python.valueToCode(t,"SLICELOWER"+e,Blockly.Python.ORDER_MEMBER)||Blockly.Python.blank),o[e]+=":","1"===r.charAt(2)&&(o[e]+=Blockly.Python.valueToCode(t,"SLICEUPPER"+e,Blockly.Python.ORDER_MEMBER)||Blockly.Python.blank),"1"===r.charAt(3)&&(o[e]+=":"+Blockly.Python.valueToCode(t,"SLICESTEP"+e,Blockly.Python.ORDER_MEMBER)||Blockly.Python.blank))}return[e+"["+o.join(", ")+"]",Blockly.Python.ORDER_MEMBER]};var isWeirdSliceCase=function(t){return null==t.lower&&null==t.upper&&null!==t.step&&"NameConstant"===t.step._astname&&t.step.value===SkAst.builtin.none.none$};BlockMirrorTextToBlocks.prototype.addSliceDim=function(t,e,o,r,l){let n=t._astname;if("Index"===n)o["INDEX"+e]=this.convert(t.value,l),r.push("I");else if("Slice"===n){let n="0",i="0",s="0";null!==t.lower&&(o["SLICELOWER"+e]=this.convert(t.lower,l),n="1"),null!==t.upper&&(o["SLICEUPPER"+e]=this.convert(t.upper,l),i="1"),null===t.step||isWeirdSliceCase(t)||(o["SLICESTEP"+e]=this.convert(t.step,l),s="1"),r.push("S"+n+i+s)}},BlockMirrorTextToBlocks.prototype.ast_Subscript=function(t,e){let o=t.value,r=t.slice,l=(t.ctx,{VALUE:this.convert(o,t)}),n=[];if("ExtSlice"===r._astname)for(let e=0;e<r.dims.length;e+=1){let o=r.dims[e];this.addSliceDim(o,e,l,n,t)}else this.addSliceDim(r,0,l,n,t);return BlockMirrorTextToBlocks.create_block("ast_Subscript",t.lineno,{},l,{inline:"true"},{arg:n})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_comprehensionFor",message0:"for %1 in %2",args0:[{type:"input_value",name:"TARGET"},{type:"input_value",name:"ITER"}],inputsInline:!0,output:"ComprehensionFor",colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_comprehensionIf",message0:"if %1",args0:[{type:"input_value",name:"TEST"}],inputsInline:!0,output:"ComprehensionIf",colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES}),Blockly.Blocks.ast_Comp_create_with_container={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.SEQUENCES),this.appendDummyInput().appendField("Add new comprehensions below"),this.appendDummyInput().appendField("   For clause"),this.appendStatementInput("STACK"),this.contextMenu=!1}},Blockly.Blocks.ast_Comp_create_with_for={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.SEQUENCES),this.appendDummyInput().appendField("For clause"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.contextMenu=!1}},Blockly.Blocks.ast_Comp_create_with_if={init:function(){this.setColour(BlockMirrorTextToBlocks.COLOR.SEQUENCES),this.appendDummyInput().appendField("If clause"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.contextMenu=!1}},BlockMirrorTextToBlocks.COMP_SETTINGS={ListComp:{start:"[",end:"]",color:BlockMirrorTextToBlocks.COLOR.LIST},SetComp:{start:"{",end:"}",color:BlockMirrorTextToBlocks.COLOR.SET},GeneratorExp:{start:"(",end:")",color:BlockMirrorTextToBlocks.COLOR.SEQUENCES},DictComp:{start:"{",end:"}",color:BlockMirrorTextToBlocks.COLOR.DICTIONARY}},["ListComp","SetComp","GeneratorExp","DictComp"].forEach((function(t){Blockly.Blocks["ast_"+t]={init:function(){this.setStyle("loop_blocks"),this.setColour(BlockMirrorTextToBlocks.COMP_SETTINGS[t].color),this.itemCount_=3;let e=this.appendValueInput("ELT").appendField(BlockMirrorTextToBlocks.COMP_SETTINGS[t].start);"DictComp"===t&&e.setCheck("DictPair"),this.appendDummyInput("END_BRACKET").appendField(BlockMirrorTextToBlocks.COMP_SETTINGS[t].end),this.updateShape_(),this.setOutput(!0),this.setMutator(new Blockly.Mutator(["ast_Comp_create_with_for","ast_Comp_create_with_if"]))},mutationToDom:function(){var t=document.createElement("mutation");return t.setAttribute("items",this.itemCount_),t},domToMutation:function(t){this.itemCount_=parseInt(t.getAttribute("items"),10),this.updateShape_()},decompose:function(t){var e=t.newBlock("ast_Comp_create_with_container");e.initSvg();var o=e.getInput("STACK").connection;let r=[];for(var l=1;l<this.itemCount_;l++){let e,i=this.getInput("GENERATOR"+l).connection;if("ast_comprehensionIf"===i.targetConnection.getSourceBlock().type)e="ast_Comp_create_with_if";else{if("ast_comprehensionFor"!==i.targetConnection.getSourceBlock().type)throw Error("Unknown block type: "+i.targetConnection.getSourceBlock().type);e="ast_Comp_create_with_for"}var n=t.newBlock(e);n.initSvg(),o.connect(n.previousConnection),o=n.nextConnection,r.push(n)}return e},compose:function(t){var e=t.getInputTargetBlock("STACK"),o=[t.valueConnection_];let r=["ast_Comp_create_with_for"];for(;e;)o.push(e.valueConnection_),r.push(e.type),e=e.nextConnection&&e.nextConnection.targetBlock();for(var l=1;l<this.itemCount_;l++){var n=this.getInput("GENERATOR"+l).connection.targetConnection;if(n&&-1===o.indexOf(n)){let t=n.getSourceBlock();if("ast_comprehensionIf"===t.type){let e=t.getInput("TEST");e.connection.targetConnection&&e.connection.targetConnection.getSourceBlock().unplug(!0)}else{if("ast_comprehensionFor"!==t.type)throw Error("Unknown block type: "+t.type);{let e=t.getInput("ITER");e.connection.targetConnection&&e.connection.targetConnection.getSourceBlock().unplug(!0);let o=t.getInput("TARGET");o.connection.targetConnection&&o.connection.targetConnection.getSourceBlock().unplug(!0)}}n.disconnect(),n.getSourceBlock().dispose()}}for(this.itemCount_=o.length,this.updateShape_(),l=1;l<this.itemCount_;l++)if(Blockly.Mutator.reconnect(o[l],this,"GENERATOR"+l),!o[l]){let t;if("ast_Comp_create_with_if"===r[l])t="ast_comprehensionIf";else{if("ast_Comp_create_with_for"!==r[l])throw Error("Unknown block type: "+r[l]);t="ast_comprehensionFor"}let e=this.workspace.newBlock(t);e.setDeletable(!1),e.setMovable(!1),e.initSvg(),this.getInput("GENERATOR"+l).connection.connect(e.outputConnection),e.render()}},saveConnections:function(t){t.valueConnection_=this.getInput("GENERATOR0").connection.targetConnection;for(var e=t.getInputTargetBlock("STACK"),o=1;e;){var r=this.getInput("GENERATOR"+o);e.valueConnection_=r&&r.connection.targetConnection,o++,e=e.nextConnection&&e.nextConnection.targetBlock()}},updateShape_:function(){for(var t=0;t<this.itemCount_;t++)if(!this.getInput("GENERATOR"+t)){let e=this.appendValueInput("GENERATOR"+t);0===t?e.setCheck("ComprehensionFor"):e.setCheck(["ComprehensionFor","ComprehensionIf"]),this.moveInputBefore("GENERATOR"+t,"END_BRACKET")}for(;this.getInput("GENERATOR"+t);)this.removeInput("GENERATOR"+t),t++}},Blockly.Python["ast_"+t]=function(e){let o;if("DictComp"===t){let t=e.getInputTargetBlock("ELT");o=null===t||"ast_DictItem"!==t.type?Blockly.Python.blank+": "+Blockly.Python.blank:(Blockly.Python.valueToCode(t,"KEY",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+": "+(Blockly.Python.valueToCode(t,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)}else o=Blockly.Python.valueToCode(e,"ELT",Blockly.Python.ORDER_NONE)||Blockly.Python.blank;let r=new Array(e.itemCount_);const l=o+" for "+Blockly.Python.blank+" in"+Blockly.Python.blank;for(var n=0;n<e.itemCount_;n++){let t=e.getInputTargetBlock("GENERATOR"+n);if(null===t)r[n]=l;else if("ast_comprehensionIf"===t.type){let e=Blockly.Python.valueToCode(t,"TEST",Blockly.Python.ORDER_NONE)||Blockly.Python.blank;r[n]="if "+e}else if("ast_comprehensionFor"===t.type){let e=Blockly.Python.valueToCode(t,"TARGET",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,o=Blockly.Python.valueToCode(t,"ITER",Blockly.Python.ORDER_NONE)||Blockly.Python.blank;r[n]="for "+e+" in "+o}else r[n]=l}return[BlockMirrorTextToBlocks.COMP_SETTINGS[t].start+o+" "+r.join(" ")+BlockMirrorTextToBlocks.COMP_SETTINGS[t].end,Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype["ast_"+t]=function(e,o){let r=e.generators,l={};if("DictComp"===t){let t=e.key,o=e.value;l.ELT=BlockMirrorTextToBlocks.create_block("ast_DictItem",e.lineno,{},{KEY:this.convert(t,e),VALUE:this.convert(o,e)},{inline:"true",deletable:"false",movable:"false"})}else{let t=e.elt;l.ELT=this.convert(t,e)}let n={inline:"true",deletable:"false",movable:"false"},i=0;for(let t=0;t<r.length;t++){let o=r[t].target,s=r[t].iter,c=r[t].ifs;if(r[t].is_async,l["GENERATOR"+i]=BlockMirrorTextToBlocks.create_block("ast_comprehensionFor",e.lineno,{},{ITER:this.convert(s,e),TARGET:this.convert(o,e)},n),i+=1,c)for(let t=0;t<c.length;t++)l["GENERATOR"+i]=BlockMirrorTextToBlocks.create_block("ast_comprehensionIf",e.lineno,{},{TEST:this.convert(c[t],e)},n),i+=1}return BlockMirrorTextToBlocks.create_block("ast_"+t,e.lineno,{},l,{inline:"false"},{"@items":i})}})),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_FunctionHeaderMutator",message0:"Setup parameters below: %1 %2 returns %3",args0:[{type:"input_dummy"},{type:"input_statement",name:"STACK",align:"RIGHT"},{type:"field_checkbox",name:"RETURNS",checked:!0,align:"RIGHT"}],colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS,enableContextMenu:!1}),[["Parameter","Parameter","",!1,!1],["ParameterType","Parameter with type","",!0,!1],["ParameterDefault","Parameter with default value","",!1,!0],["ParameterDefaultType","Parameter with type and default value","",!0,!0],["ParameterVararg","Variable length parameter","*",!1,!1],["ParameterVarargType","Variable length parameter with type","*",!0,!1],["ParameterKwarg","Keyworded Variable length parameter","**",!1],["ParameterKwargType","Keyworded Variable length parameter with type","**",!0,!1]].forEach((function(t){let e=t[0],o=t[1],r=t[2],l=t[3],n=t[4];BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_FunctionMutant"+e,message0:o,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS,enableContextMenu:!1});let i={type:"ast_Function"+e,output:"Parameter",message0:r+(r?" ":"")+"%1",args0:[{type:"field_variable",name:"NAME",variable:"param"}],colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS,enableContextMenu:!1,inputsInline:l&&n};l&&(i.message0+=" : %2",i.args0.push({type:"input_value",name:"TYPE"})),n&&(i.message0+=" = %"+(l?3:2),i.args0.push({type:"input_value",name:"DEFAULT"})),BlockMirrorTextToBlocks.BLOCKS.push(i),Blockly.Python["ast_Function"+e]=function(t){let e=Blockly.Python.variableDB_.getName(t.getFieldValue("NAME"),Blockly.Variables.NAME_TYPE),o="";l&&(o=": "+(Blockly.Python.valueToCode(t,"TYPE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank));let i="";return n&&(i="="+(Blockly.Python.valueToCode(t,"DEFAULT",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)),[r+e+o+i,Blockly.Python.ORDER_ATOMIC]}})),Blockly.Blocks.ast_FunctionDef={init:function(){this.appendDummyInput().appendField("define").appendField(new Blockly.FieldTextInput("function"),"NAME"),this.decoratorsCount_=0,this.parametersCount_=0,this.hasReturn_=!1,this.mutatorComplexity_=0,this.appendStatementInput("BODY").setCheck(null),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.FUNCTIONS),this.updateShape_(),this.setMutator(new Blockly.Mutator(["ast_FunctionMutantParameter","ast_FunctionMutantParameterType"]))},mutationToDom:function(){var t=document.createElement("mutation");return t.setAttribute("decorators",this.decoratorsCount_),t.setAttribute("parameters",this.parametersCount_),t.setAttribute("returns",this.hasReturn_),t},domToMutation:function(t){this.decoratorsCount_=parseInt(t.getAttribute("decorators"),10),this.parametersCount_=parseInt(t.getAttribute("parameters"),10),this.hasReturn_="true"===t.getAttribute("returns"),this.updateShape_()},setReturnAnnotation_:function(t){let e=this.getInput("RETURNS");t?(e||this.appendValueInput("RETURNS").setCheck(null).setAlign(Blockly.ALIGN_RIGHT).appendField("returns"),this.moveInputBefore("RETURNS","BODY")):!t&&e&&this.removeInput("RETURNS"),this.hasReturn_=t},updateShape_:function(){let t=this;[["DECORATOR","decoratorsCount_",null,"decorated by"],["PARAMETER","parametersCount_","Parameter","parameters:"]].forEach((function(e){let o=e[0],r=e[1],l=e[2],n=e[3];for(var i=0;i<t[r];i++){if(!t.getInput(o+i)){let e=t.appendValueInput(o+i).setCheck(l).setAlign(Blockly.ALIGN_RIGHT);0===i&&e.appendField(n)}t.moveInputBefore(o+i,"BODY")}for(;t.getInput(o+i);)t.removeInput(o+i),i++})),this.setReturnAnnotation_(this.hasReturn_)},decompose:function(t){var e=t.newBlock("ast_FunctionHeaderMutator");e.initSvg(),this.getInput("RETURNS")&&e.setFieldValue(this.hasReturn_?"TRUE":"FALSE","RETURNS");var o=e.getInput("STACK").connection;let r=[];for(var l=0;l<this.parametersCount_;l++){let e="ast_FunctionMutant"+this.getInput("PARAMETER"+l).connection.targetConnection.getSourceBlock().type.substring(12);var n=t.newBlock(e);n.initSvg(),o.connect(n.previousConnection),o=n.nextConnection,r.push(n)}return e},compose:function(t){var e=t.getInputTargetBlock("STACK"),o=[];let r=[];for(;e;)o.push(e.valueConnection_),r.push(e.type),e=e.nextConnection&&e.nextConnection.targetBlock();for(let t=0;t<this.parametersCount_;t++){var l=this.getInput("PARAMETER"+t).connection.targetConnection;if(l&&-1===o.indexOf(l)){let t=l.getSourceBlock();for(let e=0;e<t.inputList.length;e++){let o=t.inputList[e].connection;o&&o.targetConnection&&o.targetConnection.getSourceBlock().unplug(!0)}l.disconnect(),l.getSourceBlock().dispose()}}this.parametersCount_=o.length,this.updateShape_();for(let t=0;t<this.parametersCount_;t++)if(Blockly.Mutator.reconnect(o[t],this,"PARAMETER"+t),!o[t]){let e="ast_Function"+r[t].substring(18),o=this.workspace.newBlock(e);o.setDeletable(!1),o.setMovable(!1),o.initSvg(),this.getInput("PARAMETER"+t).connection.connect(o.outputConnection),o.render()}let n=t.getFieldValue("RETURNS");if(null!==n&&(n="TRUE"===n,this.hasReturn_!=n))if(n)this.setReturnAnnotation_(!0),Blockly.Mutator.reconnect(this.returnConnection_,this,"RETURNS"),this.returnConnection_=null;else{let t=this.getInput("RETURNS").connection;if(this.returnConnection_=t.targetConnection,this.returnConnection_){let e=t.targetBlock();e.unplug(),e.bumpNeighbours_()}this.setReturnAnnotation_(!1)}},saveConnections:function(t){for(var e=t.getInputTargetBlock("STACK"),o=0;e;){var r=this.getInput("PARAMETER"+o);e.valueConnection_=r&&r.connection.targetConnection,o++,e=e.nextConnection&&e.nextConnection.targetBlock()}}},Blockly.Python.ast_FunctionDef=function(t){let e=Blockly.Python.variableDB_.getName(t.getFieldValue("NAME"),Blockly.Variables.NAME_TYPE),o=new Array(t.decoratorsCount_);for(let e=0;e<t.decoratorsCount_;e++){let r=Blockly.Python.valueToCode(t,"DECORATOR"+e,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;o[e]="@"+r+"\n"}let r=new Array(t.parametersCount_);for(let e=0;e<t.parametersCount_;e++)r[e]=Blockly.Python.valueToCode(t,"PARAMETER"+e,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;let l="";this.hasReturn_&&(l=" -> "+Blockly.Python.valueToCode(t,"RETURNS",Blockly.Python.ORDER_NONE)||Blockly.Python.blank);let n=Blockly.Python.statementToCode(t,"BODY")||Blockly.Python.PASS;return o.join("")+"def "+e+"("+r.join(", ")+")"+l+":\n"+n},BlockMirrorTextToBlocks.prototype.parseArg=function(t,e,o,r,l){let n={movable:!1,deletable:!1};return null===t.annotation?BlockMirrorTextToBlocks.create_block(e,o,{NAME:SkAst.ffi.remapToJs(t.arg)},r,n):(r.TYPE=this.convert(t.annotation,l),BlockMirrorTextToBlocks.create_block(e+"Type",o,{NAME:SkAst.ffi.remapToJs(t.arg)},r,n))},BlockMirrorTextToBlocks.prototype.parseArgs=function(t,e,o,r){let l=t.args,n=t.vararg,i=t.kwonlyargs,s=t.kwarg,c=t.defaults,a=t.kw_defaults,u=0;if(null!==l){let t=c?c.length-l.length:0;for(let n=0;n<l.length;n++){let i={},s="ast_FunctionParameter";c[t+n]&&(i.DEFAULT=this.convert(c[t+n],r),s+="Default"),e["PARAMETER"+u]=this.parseArg(l[n],s,o,i,r),u+=1}}if(null!==n&&(e["PARAMETER"+u]=this.parseArg(n,"ast_FunctionParameterVararg",o,{},r),u+=1),null!==i)for(let t=0;t<i.length;t++){let l={},n="ast_FunctionParameter";a[t]&&(l.DEFAULT=this.convert(a[t],r),n+="Default"),e["PARAMETER"+u]=this.parseArg(i[t],n,o,l,r),u+=1}return s&&(e["PARAMETER"+u]=this.parseArg(s,"ast_FunctionParameterKwarg",o,{},r),u+=1),u},BlockMirrorTextToBlocks.prototype.ast_FunctionDef=function(t,e){let o=t.name,r=t.args,l=t.body,n=t.decorator_list,i=t.returns,s={};if(null!==n)for(let e=0;e<n.length;e++)s["DECORATOR"+e]=this.convert(n[e],t);let c=0;null!==r&&(c=this.parseArgs(r,s,t.lineno,t));let a=null!==i&&("NameConstant"!==i._astname||i.value!==SkAst.builtin.none.none$);return a&&(s.RETURNS=this.convert(i,t)),BlockMirrorTextToBlocks.create_block("ast_FunctionDef",t.lineno,{NAME:SkAst.ffi.remapToJs(o)},s,{inline:"false"},{"@decorators":null===n?0:n.length,"@parameters":c,"@returns":a},{BODY:this.convertBody(l,t)})},Blockly.Blocks.ast_Lambda={init:function(){this.appendDummyInput().appendField("lambda").setAlign(Blockly.ALIGN_RIGHT),this.decoratorsCount_=0,this.parametersCount_=0,this.hasReturn_=!1,this.appendValueInput("BODY").appendField("body").setAlign(Blockly.ALIGN_RIGHT).setCheck(null),this.setInputsInline(!1),this.setOutput(!0),this.setColour(BlockMirrorTextToBlocks.COLOR.FUNCTIONS),this.updateShape_()},mutationToDom:Blockly.Blocks.ast_FunctionDef.mutationToDom,domToMutation:Blockly.Blocks.ast_FunctionDef.domToMutation,updateShape_:Blockly.Blocks.ast_FunctionDef.updateShape_,setReturnAnnotation_:Blockly.Blocks.ast_FunctionDef.setReturnAnnotation_},Blockly.Python.ast_Lambda=function(t){let e=new Array(t.parametersCount_);for(let o=0;o<t.parametersCount_;o++)e[o]=Blockly.Python.valueToCode(t,"PARAMETER"+o,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;let o=Blockly.Python.valueToCode(t,"BODY",Blockly.Python.ORDER_LAMBDA)||Blockly.Python.PASS;return["lambda "+e.join(", ")+": "+o,Blockly.Python.ORDER_LAMBDA]},BlockMirrorTextToBlocks.prototype.ast_Lambda=function(t,e){let o=t.args,r=t.body,l={BODY:this.convert(r,t)},n=0;return null!==o&&(n=this.parseArgs(o,l,t.lineno)),BlockMirrorTextToBlocks.create_block("ast_Lambda",t.lineno,{},l,{inline:"false"},{"@decorators":0,"@parameters":n,"@returns":!1})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_ReturnFull",message0:"return %1",args0:[{type:"input_value",name:"VALUE"}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Return",message0:"return",inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS}),Blockly.Python.ast_Return=function(t){return"return\n"},Blockly.Python.ast_ReturnFull=function(t){return"return "+(Blockly.Python.valueToCode(t,"VALUE",Blockly.Python.ORDER_ATOMIC)||Blockly.Python.blank)+"\n"},BlockMirrorTextToBlocks.prototype.ast_Return=function(t,e){let o=t.value;return null==o?BlockMirrorTextToBlocks.create_block("ast_Return",t.lineno):BlockMirrorTextToBlocks.create_block("ast_ReturnFull",t.lineno,{},{VALUE:this.convert(o,t)})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_YieldFull",message0:"yield %1",args0:[{type:"input_value",name:"VALUE"}],inputsInline:!1,output:null,colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Yield",message0:"yield",inputsInline:!1,output:null,colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS}),Blockly.Python.ast_Yield=function(t){return["yield",Blockly.Python.ORDER_LAMBDA]},Blockly.Python.ast_YieldFull=function(t){return["yield "+(Blockly.Python.valueToCode(t,"VALUE",Blockly.Python.ORDER_LAMBDA)||Blockly.Python.blank),Blockly.Python.ORDER_LAMBDA]},BlockMirrorTextToBlocks.prototype.ast_Yield=function(t,e){let o=t.value;return null==o?BlockMirrorTextToBlocks.create_block("ast_Yield",t.lineno):BlockMirrorTextToBlocks.create_block("ast_YieldFull",t.lineno,{},{VALUE:this.convert(o,t)})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_YieldFrom",message0:"yield from %1",args0:[{type:"input_value",name:"VALUE"}],inputsInline:!1,output:null,colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS}),Blockly.Python.ast_YieldFrom=function(t){return["yield from "+(Blockly.Python.valueToCode(t,"VALUE",Blockly.Python.ORDER_LAMBDA)||Blockly.Python.blank),Blockly.Python.ORDER_LAMBDA]},BlockMirrorTextToBlocks.prototype.ast_YieldFrom=function(t,e){let o=t.value;return BlockMirrorTextToBlocks.create_block("ast_YieldFrom",t.lineno,{},{VALUE:this.convert(o,t)})},Blockly.Blocks.ast_Global={init:function(){this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.VARIABLES),this.nameCount_=1,this.appendDummyInput("GLOBAL").appendField("make global","START_GLOBALS"),this.updateShape_()},updateShape_:function(){let t=this.getInput("GLOBAL");this.getField("START_GLOBALS")&&this.setFieldValue(this.nameCount_>1?"make globals":"make global","START_GLOBALS");for(var e=0;e<this.nameCount_;e++)this.getField("NAME"+e)||(0!==e&&t.appendField(",").setAlign(Blockly.ALIGN_RIGHT),t.appendField(new Blockly.FieldVariable("variable"),"NAME"+e));for(;this.getField("NAME"+e);)t.removeField("NAME"+e),e++;this.getField("END_GLOBALS")&&t.removeField("END_GLOBALS"),t.appendField("available","END_GLOBALS")},mutationToDom:function(){var t=document.createElement("mutation");return t.setAttribute("names",this.nameCount_),t},domToMutation:function(t){this.nameCount_=parseInt(t.getAttribute("names"),10),this.updateShape_()}},Blockly.Python.ast_Global=function(t){let e=new Array(t.nameCount_);for(let o=0;o<t.nameCount_;o++)e[o]=Blockly.Python.variableDB_.getName(t.getFieldValue("NAME"+o),Blockly.Variables.NAME_TYPE);return"global "+e.join(", ")+"\n"},BlockMirrorTextToBlocks.prototype.ast_Global=function(t,e){let o=t.names,r={};for(var l=0;l<o.length;l++)r["NAME"+l]=SkAst.ffi.remapToJs(o[l]);return BlockMirrorTextToBlocks.create_block("ast_Global",t.lineno,r,{},{inline:"true"},{"@names":o.length})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Break",message0:"break",inputsInline:!1,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.CONTROL}),Blockly.Python.ast_Break=function(t){return"break\n"},BlockMirrorTextToBlocks.prototype.ast_Break=function(t,e){return BlockMirrorTextToBlocks.create_block("ast_Break",t.lineno)},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Continue",message0:"continue",inputsInline:!1,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.CONTROL}),Blockly.Python.ast_Continue=function(t){return"continue\n"},BlockMirrorTextToBlocks.prototype.ast_Continue=function(t,e){return BlockMirrorTextToBlocks.create_block("ast_Continue",t.lineno)},BlockMirrorTextToBlocks.HANDLERS_CATCH_ALL=0,BlockMirrorTextToBlocks.HANDLERS_NO_AS=1,BlockMirrorTextToBlocks.HANDLERS_COMPLETE=3,Blockly.Blocks.ast_Try={init:function(){this.handlersCount_=0,this.handlers_=[],this.hasElse_=!1,this.hasFinally_=!1,this.appendDummyInput().appendField("try:"),this.appendStatementInput("BODY").setCheck(null).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.EXCEPTIONS),this.updateShape_()},updateShape_:function(){for(let t=0;t<this.handlersCount_;t++)this.handlers_[t]===BlockMirrorTextToBlocks.HANDLERS_CATCH_ALL?this.appendDummyInput().appendField("except"):(this.appendValueInput("TYPE"+t).setCheck(null).appendField("except"),this.handlers_[t]===BlockMirrorTextToBlocks.HANDLERS_COMPLETE&&this.appendDummyInput().appendField("as").appendField(new Blockly.FieldVariable("item"),"NAME"+t)),this.appendStatementInput("HANDLER"+t).setCheck(null);this.hasElse_&&(this.appendDummyInput().appendField("else:"),this.appendStatementInput("ORELSE").setCheck(null)),this.hasFinally_&&(this.appendDummyInput().appendField("finally:"),this.appendStatementInput("FINALBODY").setCheck(null))},mutationToDom:function(){let t=document.createElement("mutation");t.setAttribute("orelse",this.hasElse_),t.setAttribute("finalbody",this.hasFinally_),t.setAttribute("handlers",this.handlersCount_);for(let e=0;e<this.handlersCount_;e++){let o=document.createElement("arg");o.setAttribute("name",this.handlers_[e]),t.appendChild(o)}return t},domToMutation:function(t){this.hasElse_="true"===t.getAttribute("orelse"),this.hasFinally_="true"===t.getAttribute("finalbody"),this.handlersCount_=parseInt(t.getAttribute("handlers"),10),this.handlers_=[];for(let e,o=0;e=t.childNodes[o];o++)"arg"===e.nodeName.toLowerCase()&&this.handlers_.push(parseInt(e.getAttribute("name"),10));this.updateShape_()}},Blockly.Python.ast_Try=function(t){let e=Blockly.Python.statementToCode(t,"BODY")||Blockly.Python.PASS;var o=new Array(t.handlersCount_);for(let e=0;e<t.handlersCount_;e++){let r=t.handlers_[e],l="except";r!==BlockMirrorTextToBlocks.HANDLERS_CATCH_ALL&&(l+=" "+Blockly.Python.valueToCode(t,"TYPE"+e,Blockly.Python.ORDER_NONE)||Blockly.Python.blank,r===BlockMirrorTextToBlocks.HANDLERS_COMPLETE&&(l+=" as "+Blockly.Python.variableDB_.getName(t.getFieldValue("NAME"+e),Blockly.Variables.NAME_TYPE))),l+=":\n"+(Blockly.Python.statementToCode(t,"HANDLER"+e)||Blockly.Python.PASS),o[e]=l}let r="";this.hasElse_&&(r="else:\n"+(Blockly.Python.statementToCode(t,"ORELSE")||Blockly.Python.PASS));let l="";return this.hasFinally_&&(l="finally:\n"+(Blockly.Python.statementToCode(t,"FINALBODY")||Blockly.Python.PASS)),"try:\n"+e+o.join("")+r+l},BlockMirrorTextToBlocks.prototype.ast_Try=function(t,e){let o=t.body,r=t.handlers,l=t.orelse,n=t.finalbody,i={},s={},c={"@ORELSE":null!==l&&l.length>0,"@FINALBODY":null!==n&&n.length>0,"@HANDLERS":r.length},a={BODY:this.convertBody(o,t)};null!==l&&(a.ORELSE=this.convertBody(l,t)),null!==n&&n.length&&(a.FINALBODY=this.convertBody(n,t));let u=[];for(let e=0;e<r.length;e++){let o=r[e];a["HANDLER"+e]=this.convertBody(o.body,t),null===o.type?u.push(BlockMirrorTextToBlocks.HANDLERS_CATCH_ALL):(s["TYPE"+e]=this.convert(o.type,t),null===o.name?u.push(BlockMirrorTextToBlocks.HANDLERS_NO_AS):(u.push(BlockMirrorTextToBlocks.HANDLERS_COMPLETE),i["NAME"+e]=SkAst.ffi.remapToJs(o.name.id)))}return c.ARG=u,BlockMirrorTextToBlocks.create_block("ast_Try",t.lineno,i,s,{},c,a)},Blockly.Blocks.ast_ClassDef={init:function(){this.decorators_=0,this.bases_=0,this.keywords_=0,this.appendDummyInput("HEADER").appendField("Class").appendField(new Blockly.FieldVariable("item"),"NAME"),this.appendStatementInput("BODY").setCheck(null),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.OO),this.updateShape_()},updateShape_:function(){for(let t=0;t<this.decorators_;t++){let e=this.appendValueInput("DECORATOR"+t).setCheck(null).setAlign(Blockly.ALIGN_RIGHT);0===t&&e.appendField("decorated by"),this.moveInputBefore("DECORATOR"+t,"BODY")}for(let t=0;t<this.bases_;t++){let e=this.appendValueInput("BASE"+t).setCheck(null).setAlign(Blockly.ALIGN_RIGHT);0===t&&e.appendField("inherits from"),this.moveInputBefore("BASE"+t,"BODY")}for(let t=0;t<this.keywords_;t++)this.appendValueInput("KEYWORDVALUE"+t).setCheck(null).setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldTextInput("metaclass"),"KEYWORDNAME"+t).appendField("="),this.moveInputBefore("KEYWORDVALUE"+t,"BODY")},mutationToDom:function(){let t=document.createElement("mutation");return t.setAttribute("decorators",this.decorators_),t.setAttribute("bases",this.bases_),t.setAttribute("keywords",this.keywords_),t},domToMutation:function(t){this.decorators_=parseInt(t.getAttribute("decorators"),10),this.bases_=parseInt(t.getAttribute("bases"),10),this.keywords_=parseInt(t.getAttribute("keywords"),10),this.updateShape_()}},Blockly.Python.ast_ClassDef=function(t){let e=Blockly.Python.variableDB_.getName(t.getFieldValue("NAME"),Blockly.Variables.NAME_TYPE),o=new Array(t.decorators_);for(let e=0;e<t.decorators_;e++){let r=Blockly.Python.valueToCode(t,"DECORATOR"+e,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;o[e]="@"+r+"\n"}let r=new Array(t.bases_);for(let e=0;e<t.bases_;e++)r[e]=Blockly.Python.valueToCode(t,"BASE"+e,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;let l=new Array(t.keywords_);for(let e=0;e<t.keywords_;e++){let o=t.getFieldValue("KEYWORDNAME"+e),r=Blockly.Python.valueToCode(t,"KEYWORDVALUE"+e,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;l[e]="**"==o?"**"+r:o+"="+r}let n=Blockly.Python.statementToCode(t,"BODY")||Blockly.Python.PASS,i=r.concat(l);return i=0===i.length?"":"("+i.join(", ")+")",o.join("")+"class "+e+i+":\n"+n},BlockMirrorTextToBlocks.prototype.ast_ClassDef=function(t,e){let o=t.name,r=t.bases,l=t.keywords,n=t.body,i=t.decorator_list,s={},c={NAME:SkAst.ffi.remapToJs(o)};if(null!==i)for(let e=0;e<i.length;e++)s["DECORATOR"+e]=this.convert(i[e],t);if(null!==r)for(let e=0;e<r.length;e++)s["BASE"+e]=this.convert(r[e],t);if(null!==l)for(let e=0;e<l.length;e++){s["KEYWORDVALUE"+e]=this.convert(l[e].value,t);let o=l[e].arg;c["KEYWORDNAME"+e]=null===o?"**":SkAst.ffi.remapToJs(o)}return BlockMirrorTextToBlocks.create_block("ast_ClassDef",t.lineno,c,s,{inline:"false"},{"@decorators":null===i?0:i.length,"@bases":null===r?0:r.length,"@keywords":null===l?0:l.length},{BODY:this.convertBody(n,t)})},Blockly.Blocks.ast_Import={init:function(){this.nameCount_=1,this.from_=!1,this.regulars_=[!0],this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.PYTHON),this.updateShape_()},updateShape_:function(){this.from_&&!this.getInput("FROM")?this.appendDummyInput("FROM").setAlign(Blockly.ALIGN_RIGHT).appendField("from").appendField(new Blockly.FieldTextInput("module"),"MODULE"):!this.from_&&this.getInput("FROM")&&this.removeInput("FROM");for(var t=0;t<this.nameCount_;t++){let e=this.getInput("CLAUSE"+t);e||(e=this.appendDummyInput("CLAUSE"+t).setAlign(Blockly.ALIGN_RIGHT),0===t&&e.appendField("import"),e.appendField(new Blockly.FieldTextInput("default"),"NAME"+t)),this.regulars_[t]&&this.getField("AS"+t)?(e.removeField("AS"+t),e.removeField("ASNAME"+t)):this.regulars_[t]||this.getField("AS"+t)||e.appendField("as","AS"+t).appendField(new Blockly.FieldVariable("alias"),"ASNAME"+t)}for(;this.getInput("CLAUSE"+t);)this.removeInput("CLAUSE"+t),t++;for(this.from_&&this.nameCount_>0&&this.moveInputBefore("FROM","CLAUSE0"),t=0;t+1<this.nameCount_;t++)this.moveInputBefore("CLAUSE"+t,"CLAUSE"+(t+1))},mutationToDom:function(){let t=document.createElement("mutation");t.setAttribute("names",this.nameCount_),t.setAttribute("from",this.from_);for(let e=0;e<this.nameCount_;e++){let o=document.createElement("regular");o.setAttribute("name",this.regulars_[e]),t.appendChild(o)}return t},domToMutation:function(t){this.nameCount_=parseInt(t.getAttribute("names"),10),this.from_="true"===t.getAttribute("from"),this.regulars_=[];for(let e,o=0;e=t.childNodes[o];o++)"regular"===e.nodeName.toLowerCase()&&this.regulars_.push("true"===e.getAttribute("name"));this.updateShape_()}},Blockly.Python.ast_Import=function(t){let e="";if(this.from_){let o=t.getFieldValue("MODULE");e="from "+o+" ",Blockly.Python.imported_["import_"+o]=o}let o=new Array(t.nameCount_);for(let r=0;r<t.nameCount_;r++){let l=t.getFieldValue("NAME"+r);o[r]=l,this.regulars_[r]||(l=Blockly.Python.variableDB_.getName(t.getFieldValue("ASNAME"+r),Blockly.Variables.NAME_TYPE),o[r]+=" as "+l),e||(Blockly.Python.imported_["import_"+l]=l)}return e+"import "+o.join(", ")+"\n"},BlockMirrorTextToBlocks.prototype.ast_Import=function(t,e){let o=t.names,r={},l={"@names":o.length},n=[],i="";for(let t=0;t<o.length;t++){r["NAME"+t]=SkAst.ffi.remapToJs(o[t].name);let e=null===o[t].asname;e?i=r["NAME"+t]:(r["ASNAME"+t]=SkAst.ffi.remapToJs(o[t].asname),i=r["ASNAME"+t]),n.push(e)}return l.regular=n,-1!==this.hiddenImports.indexOf(i)?null:("ImportFrom"===t._astname?(l["@from"]=!0,r.MODULE=".".repeat(t.level)+SkAst.ffi.remapToJs(t.module)):l["@from"]=!1,BlockMirrorTextToBlocks.create_block("ast_Import",t.lineno,r,{},{inline:!0},l))},BlockMirrorTextToBlocks.prototype.ast_ImportFrom=BlockMirrorTextToBlocks.prototype.ast_Import,BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_WithItem",output:"WithItem",message0:"context %1",args0:[{type:"input_value",name:"CONTEXT"}],enableContextMenu:!1,colour:BlockMirrorTextToBlocks.COLOR.CONTROL,inputsInline:!1}),Blockly.Python.ast_WithItem=function(t){return[Blockly.Python.valueToCode(t,"CONTEXT",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,Blockly.Python.ORDER_NONE]},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_WithItemAs",output:"WithItem",message0:"context %1 as %2",args0:[{type:"input_value",name:"CONTEXT"},{type:"input_value",name:"AS"}],enableContextMenu:!1,colour:BlockMirrorTextToBlocks.COLOR.CONTROL,inputsInline:!0}),Blockly.Python.ast_WithItemAs=function(t){return[(Blockly.Python.valueToCode(t,"CONTEXT",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+" as "+(Blockly.Python.valueToCode(t,"AS",Blockly.Python.ORDER_NONE)||Blockly.Python.blank),Blockly.Python.ORDER_NONE]},Blockly.Blocks.ast_With={init:function(){this.appendValueInput("ITEM0").appendField("with"),this.appendStatementInput("BODY").setCheck(null),this.itemCount_=1,this.renames_=[!1],this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.CONTROL),this.updateShape_()},mutationToDom:function(){var t=document.createElement("mutation");t.setAttribute("items",this.itemCount_);for(let e=0;e<this.itemCount_;e++){let o=document.createElement("as");o.setAttribute("name",this.renames_[e]),t.appendChild(o)}return t},domToMutation:function(t){this.itemCount_=parseInt(t.getAttribute("items"),10),this.renames_=[];for(let e,o=0;e=t.childNodes[o];o++)"as"===e.nodeName.toLowerCase()&&this.renames_.push("true"===e.getAttribute("name"));this.updateShape_()},updateShape_:function(){for(var t=1;t<this.itemCount_;t++){let e=this.getInput("ITEM"+t);e||(e=this.appendValueInput("ITEM"+t))}for(;this.getInput("ITEM"+t);)this.removeInput("ITEM"+t),t++;for(t=0;t<this.itemCount_;t++)this.moveInputBefore("ITEM"+t,"BODY")}},Blockly.Python.ast_With=function(t){let e=new Array(t.itemCount_);for(let o=0;o<t.itemCount_;o++)e[o]=Blockly.Python.valueToCode(t,"ITEM"+o,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;let o=Blockly.Python.statementToCode(t,"BODY")||Blockly.Python.PASS;return"with "+e.join(", ")+":\n"+o},BlockMirrorTextToBlocks.prototype.ast_With=function(t,e){let o=t.items,r=t.body,l={},n={"@items":o.length},i=[];for(let e=0;e<o.length;e++){let r=o[e].optional_vars;i.push(r);let n={CONTEXT:this.convert(o[e].context_expr,t)};r?(n.AS=this.convert(o[e].optional_vars,t),l["ITEM"+e]=BlockMirrorTextToBlocks.create_block("ast_WithItemAs",t.lineno,{},n,this.LOCKED_BLOCK)):l["ITEM"+e]=BlockMirrorTextToBlocks.create_block("ast_WithItem",t.lineno,{},n,this.LOCKED_BLOCK)}return n.as=i,BlockMirrorTextToBlocks.create_block("ast_With",t.lineno,{},l,{inline:"false"},n,{BODY:this.convertBody(r,t)})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Comment",message0:"# Comment: %1",args0:[{type:"field_input",name:"BODY",text:"will be ignored"}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.PYTHON}),Blockly.Python.ast_Comment=function(t){return"#"+t.getFieldValue("BODY")+"\n"},BlockMirrorTextToBlocks.prototype.ast_Comment=function(t,e){var o=t.slice(1);return BlockMirrorTextToBlocks.create_block("ast_Comment",e,{BODY:o})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Raw",message0:"Code Block: %1 %2",args0:[{type:"input_dummy"},{type:"field_multilinetext",name:"TEXT",value:""}],colour:BlockMirrorTextToBlocks.COLOR.PYTHON,previousStatement:null,nextStatement:null}),Blockly.Python.ast_Raw=function(t){return t.getFieldValue("TEXT")+"\n"};